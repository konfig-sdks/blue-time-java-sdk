/*
 * Orchestra API
 * Code Version 1.0.7.15
 *
 * The version of the OpenAPI document: Prod
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PayToolsApiModelsPaymentGatewayAccountBriefOutputModel;
import com.konfigthis.client.model.PayToolsApiModelsPaymentGatewayAccountFullOutputModel;
import com.konfigthis.client.model.PayToolsApiModelsPaymentGatewayAccountInputModel;
import com.konfigthis.client.model.SystemCollectionsGenericKeyValuePair2SystemStringSystemPrivateCoreLibVersion6000CultureneutralPublicKeyToken7cec85d7bea7798eSystemStringSystemPrivateCoreLibVersion6000CultureneutralPublicKeyToken7cec85d7bea7798e;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentGatewayAccountsApi
 */
@Disabled
public class PaymentGatewayAccountsApiTest {

    private static PaymentGatewayAccountsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PaymentGatewayAccountsApi(apiClient);
    }

    /**
     * Add or Replace a Payment Gateway Account
     *
     * A Payment Gateway Account is the set of information necessary for connecting to a specific payment gateway through our system.  This method allows you to add a new stored Payment Gateway Account in the system or to replace an existing one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addOrReplaceTest() throws ApiException {
        String name = null;
        String paymentGatewayName = null;
        List<SystemCollectionsGenericKeyValuePair2SystemStringSystemPrivateCoreLibVersion6000CultureneutralPublicKeyToken7cec85d7bea7798eSystemStringSystemPrivateCoreLibVersion6000CultureneutralPublicKeyToken7cec85d7bea7798e> credentials = null;
        PayToolsApiModelsPaymentGatewayAccountFullOutputModel response = api.addOrReplace(name)
                .paymentGatewayName(paymentGatewayName)
                .credentials(credentials)
                .execute();
        // TODO: test validations
    }

    /**
     * List Payment Gateway Accounts
     *
     * This method allows you to list all stored Payment Gateway Accounts in the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        List<PayToolsApiModelsPaymentGatewayAccountBriefOutputModel> response = api.getAll()
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve Payment Gateway Account
     *
     * A Payment Gateway Account is the set of information necessary for connecting to a specific payment gateway through our system.  This method allows you to retrieve the information set on a particular payment gateway account. You can then update it using the &#x60;[PUT] PaymentGatewayAccounts/{name}&#x60; method
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInfoTest() throws ApiException {
        String name = null;
        PayToolsApiModelsPaymentGatewayAccountFullOutputModel response = api.getInfo(name)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Payment Gateway Account
     *
     * This method allows you to delete a stored Payment Gateway Account in the system.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeAccountTest() throws ApiException {
        String name = null;
        api.removeAccount(name)
                .execute();
        // TODO: test validations
    }

}
