/*
 * Orchestra API
 * Code Version 1.0.7.15
 *
 * The version of the OpenAPI document: Prod
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PayToolsApiModelsThreeDsMerchantOutputModel;
import com.konfigthis.client.model.PayToolsDalEntitiesThreeDsBrand;
import com.konfigthis.client.model.PayToolsDalEntitiesThreeDsMerchant;
import java.net.URI;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ThreeDsMerchantsApi
 */
@Disabled
public class ThreeDsMerchantsApiTest {

    private static ThreeDsMerchantsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ThreeDsMerchantsApi(apiClient);
    }

    /**
     * Get a Merchant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMerchantInfoTest() throws ApiException {
        String name = null;
        PayToolsApiModelsThreeDsMerchantOutputModel response = api.getMerchantInfo(name)
                .execute();
        // TODO: test validations
    }

    /**
     * List Merchants
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listMerchantsTest() throws ApiException {
        List<PayToolsApiModelsThreeDsMerchantOutputModel> response = api.listMerchants()
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Merchant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeMerchantTest() throws ApiException {
        String name = null;
        api.removeMerchant(name)
                .execute();
        // TODO: test validations
    }

    /**
     * Set a merchant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMerchantInfoTest() throws ApiException {
        String merchantName = null;
        String merchantDisplayName = null;
        String merchantRequestorIdSuffix = null;
        String merchantCountry = null;
        URI merchantUrl = null;
        String acquirerName = null;
        String name = null;
        List<PayToolsDalEntitiesThreeDsBrand> brands = null;
        PayToolsDalEntitiesThreeDsMerchant response = api.updateMerchantInfo(merchantName, merchantDisplayName, merchantRequestorIdSuffix, merchantCountry, merchantUrl, acquirerName, name)
                .brands(brands)
                .execute();
        // TODO: test validations
    }

}
