/*
 * Orchestra API
 * Code Version 1.0.7.15
 *
 * The version of the OpenAPI document: Prod
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CustomFormsUploadFormFolderRequest;
import com.konfigthis.client.model.CustomFormsUploadFormFolderRequest1;
import com.konfigthis.client.model.PayToolsApiModelsCustomFormMetaModel;
import com.konfigthis.client.model.PayToolsApiModelsCustomFormUploadModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomFormsApi
 */
@Disabled
public class CustomFormsApiTest {

    private static CustomFormsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CustomFormsApi(apiClient);
    }

    /**
     * List Custom Forms
     *
     * This method allows you to retrieve the list of custom forms stored in PCI Booking
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        PayToolsApiModelsCustomFormMetaModel response = api.getList()
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Custom Forms
     *
     * This method allows you to delete a custom form that was previously stored in PCI Booking.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeFormTest() throws ApiException {
        String name = null;
        api.removeForm(name)
                .execute();
        // TODO: test validations
    }

    /**
     * Upload a custom form folder (add or replace)
     *
     * This method allows you to upload a custom form into PCI Booking. You can design your custom form copletely on your own and upload any and all related content (JavaScript, stylesheet, images, etc) to PCI Booking. All content should be stored in one ZIP file that you will provide in this request.  The uploaded data should be a zip file, properly encoded as a part named &#39;zipFile&#39; in the body.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadFormFolderTest() throws ApiException {
        String name = null;
        String contentType = null;
        String contentDisposition = null;
        Map<String, List<String>> headers = null;
        Long length = null;
        String name = null;
        String fileName = null;
        PayToolsApiModelsCustomFormUploadModel response = api.uploadFormFolder(name)
                .contentType(contentType)
                .contentDisposition(contentDisposition)
                .headers(headers)
                .length(length)
                .name(name)
                .fileName(fileName)
                .execute();
        // TODO: test validations
    }

}
