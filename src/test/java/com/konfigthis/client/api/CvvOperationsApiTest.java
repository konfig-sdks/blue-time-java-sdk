/*
 * Orchestra API
 * Code Version 1.0.7.15
 *
 * The version of the OpenAPI document: Prod
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PayToolsApiModelsCvvOpsChargeRequest;
import com.konfigthis.client.model.PayToolsApiModelsJwsOutputModel;
import com.konfigthis.client.model.PayToolsApiModelsJwsOutputModel1PayToolsBlAuthenticationChargeCardSignedModelPayToolsBlVersion1000CultureneutralPublicKeyTokennull;
import com.konfigthis.client.model.PayToolsBlAuthenticationChargePresetData;
import com.konfigthis.client.model.PayToolsBlAuthenticationCvvSignedDataModel;
import com.konfigthis.client.model.PayToolsSharedModelsCardStoredCard;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CvvOperationsApi
 */
@Disabled
public class CvvOperationsApiTest {

    private static CvvOperationsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CvvOperationsApi(apiClient);
    }

    /**
     * Get a token to start a CVV operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTokenCvvOperationTest() throws ApiException {
        Integer ttl = null;
        PayToolsSharedModelsCardStoredCard card = null;
        PayToolsBlAuthenticationChargePresetData crgD = null;
        PayToolsApiModelsJwsOutputModel response = api.getTokenCvvOperation(ttl)
                .card(card)
                .crgD(crgD)
                .execute();
        // TODO: test validations
    }

    /**
     * Perform Univesal payment gateway charge operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void performUniversalPaymentGatewayChargeTest() throws ApiException {
        String cvv = null;
        PayToolsApiModelsJwsOutputModel1PayToolsBlAuthenticationChargeCardSignedModelPayToolsBlVersion1000CultureneutralPublicKeyTokennull response = api.performUniversalPaymentGatewayCharge(cvv)
                .execute();
        // TODO: test validations
    }

    /**
     * Perform validation of the operation using signed data from charge operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validateOperationTest() throws ApiException {
        PayToolsBlAuthenticationCvvSignedDataModel response = api.validateOperation()
                .execute();
        // TODO: test validations
    }

}
