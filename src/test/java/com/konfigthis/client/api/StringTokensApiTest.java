/*
 * Orchestra API
 * Code Version 1.0.7.15
 *
 * The version of the OpenAPI document: Prod
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PayToolsApiModelsStringTokenIntputModel;
import com.konfigthis.client.model.PayToolsApiModelsStringTokenMetaDataOutputModel;
import com.konfigthis.client.model.PayToolsApiModelsStringTokenOutputModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StringTokensApi
 */
@Disabled
public class StringTokensApiTest {

    private static StringTokensApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new StringTokensApi(apiClient);
    }

    /**
     * Delete an existing string by token
     *
     * This method allows you to delete a stringToken by its token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteByTokenTest() throws ApiException {
        String token = null;
        api.deleteByToken(token)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve content of StringToken
     *
     * This method allows you to retrieve the stored content of the StringToken.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContentTest() throws ApiException {
        String token = null;
        PayToolsApiModelsStringTokenOutputModel response = api.getContent(token)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve meta data of a StringToken
     *
     * This method allows you to retrieve the meta data of a StringToken.  The response to this method will **not** retrieve the content of the StringToken (you can do that by using &#x60;GET /StringTokens/{token}&#x60;)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetaDataTest() throws ApiException {
        String token = null;
        PayToolsApiModelsStringTokenMetaDataOutputModel response = api.getMetaData(token)
                .execute();
        // TODO: test validations
    }

    /**
     * Store and tokenize a string
     *
     * This method allows you to submit a string to be stored and tokenized in our system.  Once tokenized, the token ID will be returned in the body of the response and the full token URI will be returned in the &#x60;Location&#x60; header.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storeAndTokenizeTest() throws ApiException {
        String payload = null;
        PayToolsApiModelsStringTokenMetaDataOutputModel response = api.storeAndTokenize(payload)
                .execute();
        // TODO: test validations
    }

}
