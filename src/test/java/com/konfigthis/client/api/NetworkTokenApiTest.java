/*
 * Orchestra API
 * Code Version 1.0.7.15
 *
 * The version of the OpenAPI document: Prod
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.NetworkTokenRequestSource;
import com.konfigthis.client.model.NetworkTokenTokenizationResult;
import com.konfigthis.client.model.PayToolsApiModelsCardBaseWithSecurityCode;
import com.konfigthis.client.model.PayToolsApiModelsNetworkTokenizationDeleteTokenRequest;
import com.konfigthis.client.model.PayToolsApiModelsNetworkTokenizationTokenizeRequest;
import com.konfigthis.client.model.PayToolsApiModelsTokenizationRequest;
import com.konfigthis.client.model.PaymentsNetworkTokenSchemes;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NetworkTokenApi
 */
@Disabled
public class NetworkTokenApiTest {

    private static NetworkTokenApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new NetworkTokenApi(apiClient);
    }

    /**
     * Network-tokenize a card
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cardTokenizeTest() throws ApiException {
        PayToolsApiModelsTokenizationRequest tokenizationRequest = null;
        PayToolsApiModelsCardBaseWithSecurityCode card = null;
        NetworkTokenTokenizationResult response = api.cardTokenize()
                .tokenizationRequest(tokenizationRequest)
                .card(card)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Network-token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        NetworkTokenRequestSource source = null;
        String tokenId = null;
        PaymentsNetworkTokenSchemes brand = null;
        String reason = null;
        Boolean response = api.delete(source, tokenId)
                .brand(brand)
                .reason(reason)
                .execute();
        // TODO: test validations
    }

}
