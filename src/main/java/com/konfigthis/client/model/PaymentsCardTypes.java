/*
 * Orchestra API
 * Code Version 1.0.7.15
 *
 * The version of the OpenAPI document: Prod
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Payments.CardTypes
 */
@JsonAdapter(PaymentsCardTypes.Adapter.class)public enum PaymentsCardTypes {
  
  VISA("Visa"),
  
  AMEX("AMEX"),
  
  BC("BC"),
  
  MASTERCARD("MasterCard"),
  
  MC_ALASKA("MC_Alaska"),
  
  MC_CANADA("MC_Canada"),
  
  CARTEBLANCHE("CarteBlanche"),
  
  UNIONPAY("UnionPay"),
  
  DISCOVER("Discover"),
  
  DINERSCLUB("DinersClub"),
  
  CARTASI("CartaSi"),
  
  CARTEBLEUE("CarteBleue"),
  
  DANKORT("Dankort"),
  
  DELTA("Delta"),
  
  ELECTRON("Electron"),
  
  JCB("JCB"),
  
  MAESTRO("Maestro"),
  
  SWITCH("Switch"),
  
  SOLO("Solo"),
  
  LAZER("Lazer"),
  
  ELO("Elo"),
  
  HIPERCARD("Hipercard"),
  
  ENROUTE("enRoute"),
  
  UATP("UATP");

  private String value;

  PaymentsCardTypes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PaymentsCardTypes fromValue(String value) {
    for (PaymentsCardTypes b : PaymentsCardTypes.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<PaymentsCardTypes> {
    @Override
    public void write(final JsonWriter jsonWriter, final PaymentsCardTypes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PaymentsCardTypes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PaymentsCardTypes.fromValue(value);
    }
  }
}

