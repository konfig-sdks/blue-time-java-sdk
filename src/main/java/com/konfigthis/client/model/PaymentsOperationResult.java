/*
 * Orchestra API
 * Code Version 1.0.7.15
 *
 * The version of the OpenAPI document: Prod
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PaymentsCurrencyCode;
import com.konfigthis.client.model.PaymentsOperation;
import com.konfigthis.client.model.PaymentsResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PaymentsOperationResult
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PaymentsOperationResult {
  public static final String SERIALIZED_NAME_AUTHORIZATION_CODE = "authorizationCode";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_CODE)
  private String authorizationCode;

  public static final String SERIALIZED_NAME_OPERATION_TYPE = "operationType";
  @SerializedName(SERIALIZED_NAME_OPERATION_TYPE)
  private PaymentsOperation operationType;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private PaymentsCurrencyCode currency;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_OPERATION_RESULT_CODE = "operationResultCode";
  @SerializedName(SERIALIZED_NAME_OPERATION_RESULT_CODE)
  private PaymentsResult operationResultCode;

  public static final String SERIALIZED_NAME_OPERATION_RESULT_DESCRIPTION = "operationResultDescription";
  @SerializedName(SERIALIZED_NAME_OPERATION_RESULT_DESCRIPTION)
  private String operationResultDescription;

  public static final String SERIALIZED_NAME_CUSTOM_GATEWAY_RESPONSE = "customGatewayResponse";
  @SerializedName(SERIALIZED_NAME_CUSTOM_GATEWAY_RESPONSE)
  private Object customGatewayResponse = null;

  public static final String SERIALIZED_NAME_GATEWAY_NAME = "gatewayName";
  @SerializedName(SERIALIZED_NAME_GATEWAY_NAME)
  private String gatewayName;

  public static final String SERIALIZED_NAME_GATEWAY_REFERENCE = "gatewayReference";
  @SerializedName(SERIALIZED_NAME_GATEWAY_REFERENCE)
  private String gatewayReference;

  public static final String SERIALIZED_NAME_GATEWAY_RESULT_CODE = "gatewayResultCode";
  @SerializedName(SERIALIZED_NAME_GATEWAY_RESULT_CODE)
  private String gatewayResultCode;

  public static final String SERIALIZED_NAME_GATEWAY_RESULT_DESCRIPTION = "gatewayResultDescription";
  @SerializedName(SERIALIZED_NAME_GATEWAY_RESULT_DESCRIPTION)
  private String gatewayResultDescription;

  public static final String SERIALIZED_NAME_GATEWAY_RESULT_SUB_CODE = "gatewayResultSubCode";
  @SerializedName(SERIALIZED_NAME_GATEWAY_RESULT_SUB_CODE)
  private String gatewayResultSubCode;

  public static final String SERIALIZED_NAME_GATEWAY_RESULT_SUB_DESCRIPTION = "gatewayResultSubDescription";
  @SerializedName(SERIALIZED_NAME_GATEWAY_RESULT_SUB_DESCRIPTION)
  private String gatewayResultSubDescription;

  public static final String SERIALIZED_NAME_GATEWAY_TOKEN = "gatewayToken";
  @SerializedName(SERIALIZED_NAME_GATEWAY_TOKEN)
  private Object gatewayToken = null;

  public PaymentsOperationResult() {
  }

  public PaymentsOperationResult authorizationCode(String authorizationCode) {
    
    
    
    
    this.authorizationCode = authorizationCode;
    return this;
  }

   /**
   * Get authorizationCode
   * @return authorizationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthorizationCode() {
    return authorizationCode;
  }


  public void setAuthorizationCode(String authorizationCode) {
    
    
    
    this.authorizationCode = authorizationCode;
  }


  public PaymentsOperationResult operationType(PaymentsOperation operationType) {
    
    
    
    
    this.operationType = operationType;
    return this;
  }

   /**
   * Get operationType
   * @return operationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentsOperation getOperationType() {
    return operationType;
  }


  public void setOperationType(PaymentsOperation operationType) {
    
    
    
    this.operationType = operationType;
  }


  public PaymentsOperationResult currency(PaymentsCurrencyCode currency) {
    
    
    
    
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentsCurrencyCode getCurrency() {
    return currency;
  }


  public void setCurrency(PaymentsCurrencyCode currency) {
    
    
    
    this.currency = currency;
  }


  public PaymentsOperationResult amount(Double amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAmount() {
    return amount;
  }


  public void setAmount(Double amount) {
    
    
    
    this.amount = amount;
  }


  public PaymentsOperationResult operationResultCode(PaymentsResult operationResultCode) {
    
    
    
    
    this.operationResultCode = operationResultCode;
    return this;
  }

   /**
   * Get operationResultCode
   * @return operationResultCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PaymentsResult getOperationResultCode() {
    return operationResultCode;
  }


  public void setOperationResultCode(PaymentsResult operationResultCode) {
    
    
    
    this.operationResultCode = operationResultCode;
  }


  public PaymentsOperationResult operationResultDescription(String operationResultDescription) {
    
    
    
    
    this.operationResultDescription = operationResultDescription;
    return this;
  }

   /**
   * Get operationResultDescription
   * @return operationResultDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOperationResultDescription() {
    return operationResultDescription;
  }


  public void setOperationResultDescription(String operationResultDescription) {
    
    
    
    this.operationResultDescription = operationResultDescription;
  }


  public PaymentsOperationResult customGatewayResponse(Object customGatewayResponse) {
    
    
    
    
    this.customGatewayResponse = customGatewayResponse;
    return this;
  }

   /**
   * Get customGatewayResponse
   * @return customGatewayResponse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCustomGatewayResponse() {
    return customGatewayResponse;
  }


  public void setCustomGatewayResponse(Object customGatewayResponse) {
    
    
    
    this.customGatewayResponse = customGatewayResponse;
  }


  public PaymentsOperationResult gatewayName(String gatewayName) {
    
    
    
    
    this.gatewayName = gatewayName;
    return this;
  }

   /**
   * Get gatewayName
   * @return gatewayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGatewayName() {
    return gatewayName;
  }


  public void setGatewayName(String gatewayName) {
    
    
    
    this.gatewayName = gatewayName;
  }


  public PaymentsOperationResult gatewayReference(String gatewayReference) {
    
    
    
    
    this.gatewayReference = gatewayReference;
    return this;
  }

   /**
   * Get gatewayReference
   * @return gatewayReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGatewayReference() {
    return gatewayReference;
  }


  public void setGatewayReference(String gatewayReference) {
    
    
    
    this.gatewayReference = gatewayReference;
  }


  public PaymentsOperationResult gatewayResultCode(String gatewayResultCode) {
    
    
    
    
    this.gatewayResultCode = gatewayResultCode;
    return this;
  }

   /**
   * Get gatewayResultCode
   * @return gatewayResultCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGatewayResultCode() {
    return gatewayResultCode;
  }


  public void setGatewayResultCode(String gatewayResultCode) {
    
    
    
    this.gatewayResultCode = gatewayResultCode;
  }


  public PaymentsOperationResult gatewayResultDescription(String gatewayResultDescription) {
    
    
    
    
    this.gatewayResultDescription = gatewayResultDescription;
    return this;
  }

   /**
   * Get gatewayResultDescription
   * @return gatewayResultDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGatewayResultDescription() {
    return gatewayResultDescription;
  }


  public void setGatewayResultDescription(String gatewayResultDescription) {
    
    
    
    this.gatewayResultDescription = gatewayResultDescription;
  }


  public PaymentsOperationResult gatewayResultSubCode(String gatewayResultSubCode) {
    
    
    
    
    this.gatewayResultSubCode = gatewayResultSubCode;
    return this;
  }

   /**
   * Get gatewayResultSubCode
   * @return gatewayResultSubCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGatewayResultSubCode() {
    return gatewayResultSubCode;
  }


  public void setGatewayResultSubCode(String gatewayResultSubCode) {
    
    
    
    this.gatewayResultSubCode = gatewayResultSubCode;
  }


  public PaymentsOperationResult gatewayResultSubDescription(String gatewayResultSubDescription) {
    
    
    
    
    this.gatewayResultSubDescription = gatewayResultSubDescription;
    return this;
  }

   /**
   * Get gatewayResultSubDescription
   * @return gatewayResultSubDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGatewayResultSubDescription() {
    return gatewayResultSubDescription;
  }


  public void setGatewayResultSubDescription(String gatewayResultSubDescription) {
    
    
    
    this.gatewayResultSubDescription = gatewayResultSubDescription;
  }


  public PaymentsOperationResult gatewayToken(Object gatewayToken) {
    
    
    
    
    this.gatewayToken = gatewayToken;
    return this;
  }

   /**
   * Get gatewayToken
   * @return gatewayToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getGatewayToken() {
    return gatewayToken;
  }


  public void setGatewayToken(Object gatewayToken) {
    
    
    
    this.gatewayToken = gatewayToken;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PaymentsOperationResult instance itself
   */
  public PaymentsOperationResult putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentsOperationResult paymentsOperationResult = (PaymentsOperationResult) o;
    return Objects.equals(this.authorizationCode, paymentsOperationResult.authorizationCode) &&
        Objects.equals(this.operationType, paymentsOperationResult.operationType) &&
        Objects.equals(this.currency, paymentsOperationResult.currency) &&
        Objects.equals(this.amount, paymentsOperationResult.amount) &&
        Objects.equals(this.operationResultCode, paymentsOperationResult.operationResultCode) &&
        Objects.equals(this.operationResultDescription, paymentsOperationResult.operationResultDescription) &&
        Objects.equals(this.customGatewayResponse, paymentsOperationResult.customGatewayResponse) &&
        Objects.equals(this.gatewayName, paymentsOperationResult.gatewayName) &&
        Objects.equals(this.gatewayReference, paymentsOperationResult.gatewayReference) &&
        Objects.equals(this.gatewayResultCode, paymentsOperationResult.gatewayResultCode) &&
        Objects.equals(this.gatewayResultDescription, paymentsOperationResult.gatewayResultDescription) &&
        Objects.equals(this.gatewayResultSubCode, paymentsOperationResult.gatewayResultSubCode) &&
        Objects.equals(this.gatewayResultSubDescription, paymentsOperationResult.gatewayResultSubDescription) &&
        Objects.equals(this.gatewayToken, paymentsOperationResult.gatewayToken)&&
        Objects.equals(this.additionalProperties, paymentsOperationResult.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizationCode, operationType, currency, amount, operationResultCode, operationResultDescription, customGatewayResponse, gatewayName, gatewayReference, gatewayResultCode, gatewayResultDescription, gatewayResultSubCode, gatewayResultSubDescription, gatewayToken, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentsOperationResult {\n");
    sb.append("    authorizationCode: ").append(toIndentedString(authorizationCode)).append("\n");
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    operationResultCode: ").append(toIndentedString(operationResultCode)).append("\n");
    sb.append("    operationResultDescription: ").append(toIndentedString(operationResultDescription)).append("\n");
    sb.append("    customGatewayResponse: ").append(toIndentedString(customGatewayResponse)).append("\n");
    sb.append("    gatewayName: ").append(toIndentedString(gatewayName)).append("\n");
    sb.append("    gatewayReference: ").append(toIndentedString(gatewayReference)).append("\n");
    sb.append("    gatewayResultCode: ").append(toIndentedString(gatewayResultCode)).append("\n");
    sb.append("    gatewayResultDescription: ").append(toIndentedString(gatewayResultDescription)).append("\n");
    sb.append("    gatewayResultSubCode: ").append(toIndentedString(gatewayResultSubCode)).append("\n");
    sb.append("    gatewayResultSubDescription: ").append(toIndentedString(gatewayResultSubDescription)).append("\n");
    sb.append("    gatewayToken: ").append(toIndentedString(gatewayToken)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("authorizationCode");
    openapiFields.add("operationType");
    openapiFields.add("currency");
    openapiFields.add("amount");
    openapiFields.add("operationResultCode");
    openapiFields.add("operationResultDescription");
    openapiFields.add("customGatewayResponse");
    openapiFields.add("gatewayName");
    openapiFields.add("gatewayReference");
    openapiFields.add("gatewayResultCode");
    openapiFields.add("gatewayResultDescription");
    openapiFields.add("gatewayResultSubCode");
    openapiFields.add("gatewayResultSubDescription");
    openapiFields.add("gatewayToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PaymentsOperationResult
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PaymentsOperationResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentsOperationResult is not found in the empty JSON string", PaymentsOperationResult.openapiRequiredFields.toString()));
        }
      }
      if (!jsonObj.get("authorizationCode").isJsonNull() && (jsonObj.get("authorizationCode") != null && !jsonObj.get("authorizationCode").isJsonNull()) && !jsonObj.get("authorizationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizationCode").toString()));
      }
      if (!jsonObj.get("operationResultDescription").isJsonNull() && (jsonObj.get("operationResultDescription") != null && !jsonObj.get("operationResultDescription").isJsonNull()) && !jsonObj.get("operationResultDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operationResultDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operationResultDescription").toString()));
      }
      if (!jsonObj.get("gatewayName").isJsonNull() && (jsonObj.get("gatewayName") != null && !jsonObj.get("gatewayName").isJsonNull()) && !jsonObj.get("gatewayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gatewayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gatewayName").toString()));
      }
      if (!jsonObj.get("gatewayReference").isJsonNull() && (jsonObj.get("gatewayReference") != null && !jsonObj.get("gatewayReference").isJsonNull()) && !jsonObj.get("gatewayReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gatewayReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gatewayReference").toString()));
      }
      if (!jsonObj.get("gatewayResultCode").isJsonNull() && (jsonObj.get("gatewayResultCode") != null && !jsonObj.get("gatewayResultCode").isJsonNull()) && !jsonObj.get("gatewayResultCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gatewayResultCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gatewayResultCode").toString()));
      }
      if (!jsonObj.get("gatewayResultDescription").isJsonNull() && (jsonObj.get("gatewayResultDescription") != null && !jsonObj.get("gatewayResultDescription").isJsonNull()) && !jsonObj.get("gatewayResultDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gatewayResultDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gatewayResultDescription").toString()));
      }
      if (!jsonObj.get("gatewayResultSubCode").isJsonNull() && (jsonObj.get("gatewayResultSubCode") != null && !jsonObj.get("gatewayResultSubCode").isJsonNull()) && !jsonObj.get("gatewayResultSubCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gatewayResultSubCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gatewayResultSubCode").toString()));
      }
      if (!jsonObj.get("gatewayResultSubDescription").isJsonNull() && (jsonObj.get("gatewayResultSubDescription") != null && !jsonObj.get("gatewayResultSubDescription").isJsonNull()) && !jsonObj.get("gatewayResultSubDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gatewayResultSubDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gatewayResultSubDescription").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentsOperationResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentsOperationResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentsOperationResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentsOperationResult.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentsOperationResult>() {
           @Override
           public void write(JsonWriter out, PaymentsOperationResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentsOperationResult read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PaymentsOperationResult instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PaymentsOperationResult given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PaymentsOperationResult
  * @throws IOException if the JSON string is invalid with respect to PaymentsOperationResult
  */
  public static PaymentsOperationResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentsOperationResult.class);
  }

 /**
  * Convert an instance of PaymentsOperationResult to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

