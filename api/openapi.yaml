openapi: 3.0.1
info:
  description: Code Version 1.0.7.15
  title: Orchestra API
  version: Prod
  x-konfig-uses-multipart-form-data: true
servers:
- url: https://api.epaytools.com
tags:
- description: Card operations controller
  name: CardOperations
- description: Universal Payment Gateway
  name: PaymentGateway
- name: ThreeDsSessions
- description: Token management
  name: StringTokens
- description: Tools
  name: Tools
- description: Payment Gateway Accounts
  name: PaymentGatewayAccounts
- name: ThreeDsMerchants
- name: CustomForms
- name: CvvOperations
- name: NetworkToken
- description: Utils
  name: Utils
paths:
  /CustomForms:
    get:
      description: This method allows you to retrieve the list of custom forms stored
        in PCI Booking
      operationId: CustomForms_getList
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.CustomFormMetaModel'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: List Custom Forms
      tags:
      - CustomForms
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--CustomForms
      x-accepts: application/json
  /CustomForms/{name}:
    delete:
      description: This method allows you to delete a custom form that was previously
        stored in PCI Booking.
      operationId: CustomForms_removeForm
      parameters:
      - description: The unique identifier provided to this custom form when originally
          uploaded
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Not authenticated
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFormsRemoveFormResponse'
          description: Not Found
          x-do-not-generate: true
      security:
      - ApiKeyAuth: []
      summary: Delete a Custom Forms
      tags:
      - CustomForms
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--CustomForms-name
      x-accepts: application/json
    put:
      description: "This method allows you to upload a custom form into PCI Booking.\
        \ You can design your custom form copletely on your own and upload any and\
        \ all related content (JavaScript, stylesheet, images, etc) to PCI Booking.\
        \ All content should be stored in one ZIP file that you will provide in this\
        \ request.\r\nThe uploaded data should be a zip file, properly encoded as\
        \ a part named 'zipFile' in the body."
      operationId: CustomForms_uploadFormFolder
      parameters:
      - description: The unique name to identify this form in PCI Booking. You will
          use this value whenever referencing this custom form.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            encoding:
              ContentType:
                style: form
              ContentDisposition:
                style: form
              Headers:
                style: form
              Length:
                style: form
              Name:
                style: form
              FileName:
                style: form
            schema:
              $ref: '#/components/schemas/CustomFormsUploadFormFolderRequest1'
          multipart/form-data:
            encoding:
              ContentType:
                style: form
              ContentDisposition:
                style: form
              Headers:
                style: form
              Length:
                style: form
              Name:
                style: form
              FileName:
                style: form
            schema:
              $ref: '#/components/schemas/CustomFormsUploadFormFolderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.CustomFormUploadModel'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Upload a custom form folder (add or replace)
      tags:
      - CustomForms
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--CustomForms-name
      x-content-type: application/json
      x-accepts: application/json
  /ThreeDsMerchants:
    get:
      operationId: ThreeDsMerchants_listMerchants
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreeDsMerchantsListMerchantsResponse'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: List Merchants
      tags:
      - ThreeDsMerchants
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--ThreeDsMerchants
      x-accepts: application/json
  /ThreeDsMerchants/{name}:
    delete:
      operationId: ThreeDsMerchants_removeMerchant
      parameters:
      - description: Name of merchant
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Delete a Merchant
      tags:
      - ThreeDsMerchants
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--ThreeDsMerchants-name
      x-accepts: application/json
    get:
      operationId: ThreeDsMerchants_getMerchantInfo
      parameters:
      - description: Name of merchant
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.ThreeDsMerchantOutputModel'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Get a Merchant
      tags:
      - ThreeDsMerchants
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--ThreeDsMerchants-name
      x-accepts: application/json
    put:
      operationId: ThreeDsMerchants_updateMerchantInfo
      parameters:
      - description: Name of merchant
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsMerchant'
        description: 3DS Merchant
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsMerchant'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Set a merchant
      tags:
      - ThreeDsMerchants
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--ThreeDsMerchants-name
      x-content-type: application/json
      x-accepts: application/json
  /CardOperations:
    post:
      operationId: CardOperations_getTokenStartOperation
      parameters:
      - description: Time to live for the returned token
        explode: true
        in: query
        name: ttl
        required: true
        schema:
          format: int32
          maximum: 3600
          minimum: 60
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Bl.Authentication.PreSignedDataModel'
        description: The data to be validated in further requests
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.JwsMultipleOutputModel'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Get a token to start a card operation
      tags:
      - CardOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--CardOperations
      x-content-type: application/json
      x-accepts: application/json
  /CardOperations/validate:
    post:
      operationId: CardOperations_performValidation
      parameters:
      - description: Card prefix
        explode: true
        in: query
        name: iin
        required: true
        schema:
          pattern: "\\d{6,11}"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.PayerBase'
        description: Payer details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.JwsOutputModel1pciBooking.IINLookup.Library.CardValidationResultpciBooking.IINLookup.LibraryVersion1.0.4.0CultureneutralPublicKeyTokennull'
          description: Success
        "401":
          description: Not authenticated
      security:
      - JwsAuth: []
      summary: Perform card validation
      tags:
      - CardOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--CardOperations-validate
      x-content-type: application/json
      x-accepts: application/json
  /CardOperations/charge:
    post:
      operationId: CardOperations_performUniversalPaymentGatewayCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.CardOpsChargeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.JwsOutputModel1Payments.OperationResultPaymentsVersion0.0.0.0CultureneutralPublicKeyTokennull'
          description: Success
        "401":
          description: Not authenticated
      security:
      - JwsAuth: []
      summary: Perform Univesal payment gateway charge operation
      tags:
      - CardOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--CardOperations-charge
      x-content-type: application/json
      x-accepts: application/json
  /CardOperations/store:
    post:
      operationId: CardOperations_tokenizeAndStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.StringTokenIntputModel'
        description: Model with card number to be tokenized
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.JwsOutputModel1PayTools_Api.Models.StringTokenMetaDataOutputModelPayToolsApiVersion1.0.7.15CultureneutralPublicKeyTokennull'
          description: Success
        "401":
          description: Not authenticated
      security:
      - JwsAuth: []
      summary: Tokenize and store card number
      tags:
      - CardOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--CardOperations-store
      x-content-type: application/json
      x-accepts: application/json
  /CardOperations/opValidate:
    get:
      operationId: CardOperations_performValidation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Bl.Authentication.SignedData'
          description: Success
        "401":
          description: Not authenticated
      security:
      - JwsAuth: []
      summary: Perform validation of the operation using to signed data
      tags:
      - CardOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--CardOperations-opValidate
      x-accepts: application/json
  /CardOperations/topBrands:
    get:
      description: "The result is an array of 5 elements, where each element represents\
        \ iin prefixes for a givel size as well as the list of logo Url's for all\
        \ brands.\r\nEach element in the top-level array is an object where members\
        \ are prefixes and data is the brand.\r\nFor a quick lookup:\r\n1. get the\
        \ element by the size of your prefix.\r\n2. try to obtain the prefix as a\
        \ member name; The member value is the brand\r\n\r\nFor logo lookup finf thr\
        \ brand name as the key to the logos member.\r\nIf not found, you can try\
        \ using 'DEFAULT'."
      operationId: CardOperations_getTopBrandsLookup
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.TopBrands'
          description: Success
        "401":
          description: Not authenticated
      security:
      - JwsAuth: []
      summary: Return top credit card brands for lookup of up to 5 first digits. It
        covers 90% of the cases
      tags:
      - CardOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--CardOperations-topBrands
      x-accepts: application/json
  /CardOperations/brand:
    get:
      operationId: CardOperations_getBrandPrefix
      parameters:
      - description: Card prefix
        explode: true
        in: query
        name: iin
        required: true
        schema:
          pattern: "\\d{6,11}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.BrandLookupResult'
          description: Success
        "401":
          description: Not authenticated
      security:
      - JwsAuth: []
      summary: Return brand of card prefix.
      tags:
      - CardOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--CardOperations-brand
      x-accepts: application/json
  /CvvOperations:
    post:
      operationId: CvvOperations_getTokenCvvOperation
      parameters:
      - description: Time to live for the returned token
        explode: true
        in: query
        name: ttl
        required: true
        schema:
          format: int32
          maximum: 3600
          minimum: 60
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Bl.Authentication.CvvSignedDataModel'
        description: The data to be validated in further requests
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.JwsOutputModel'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Get a token to start a CVV operation
      tags:
      - CvvOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--CvvOperations
      x-content-type: application/json
      x-accepts: application/json
  /CvvOperations/charge:
    post:
      operationId: CvvOperations_performUniversalPaymentGatewayCharge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.CvvOpsChargeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.JwsOutputModel1PayTools_Bl.Authentication.ChargeCardSignedModelPayToolsBlVersion1.0.0.0CultureneutralPublicKeyTokennull'
          description: Success
      summary: Perform Univesal payment gateway charge operation
      tags:
      - CvvOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--CvvOperations-charge
      x-content-type: application/json
      x-accepts: application/json
  /CvvOperations/opValidate:
    get:
      operationId: CvvOperations_validateOperation
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Bl.Authentication.CvvSignedDataModel'
          description: Success
      summary: Perform validation of the operation using signed data from charge operation
      tags:
      - CvvOperations
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--CvvOperations-opValidate
      x-accepts: application/json
  /NetworkToken:
    delete:
      operationId: NetworkToken_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.NetworkTokenizationDeleteTokenRequest'
        description: Delete Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkTokenDeleteResponse'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Delete a Network-token
      tags:
      - NetworkToken
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--NetworkToken
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: NetworkToken_cardTokenize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.NetworkTokenizationTokenizeRequest'
        description: Tokenization Request
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkToken.TokenizationResult'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Network-tokenize a card
      tags:
      - NetworkToken
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--NetworkToken
      x-content-type: application/json
      x-accepts: application/json
  /PaymentGatewayAccounts/{name}:
    delete:
      description: This method allows you to delete a stored Payment Gateway Account
        in the system.
      operationId: PaymentGatewayAccounts_removeAccount
      parameters:
      - description: A unique name of this Payment Gateway Account
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Delete a Payment Gateway Account
      tags:
      - PaymentGatewayAccounts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--PaymentGatewayAccounts-name
      x-accepts: application/json
    get:
      description: "A Payment Gateway Account is the set of information necessary\
        \ for connecting to a specific payment gateway through our system.\r\nThis\
        \ method allows you to retrieve the information set on a particular payment\
        \ gateway account. You can then update it using the `[PUT] PaymentGatewayAccounts/{name}`\
        \ method"
      operationId: PaymentGatewayAccounts_getInfo
      parameters:
      - description: A unique name of this Payment Gateway Account
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccountFullOutputModel'
          description: Success
        "401":
          description: Not authenticated
        "404":
          description: Not found
      security:
      - ApiKeyAuth: []
      summary: Retrieve Payment Gateway Account
      tags:
      - PaymentGatewayAccounts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--PaymentGatewayAccounts-name
      x-accepts: application/json
    put:
      description: "A Payment Gateway Account is the set of information necessary\
        \ for connecting to a specific payment gateway through our system.\r\nThis\
        \ method allows you to add a new stored Payment Gateway Account in the system\
        \ or to replace an existing one."
      operationId: PaymentGatewayAccounts_addOrReplace
      parameters:
      - description: A unique name of this Payment Gateway Account
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccountInputModel'
        description: Payment gateway account data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccountFullOutputModel'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Add or Replace a Payment Gateway Account
      tags:
      - PaymentGatewayAccounts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--PaymentGatewayAccounts-name
      x-content-type: application/json
      x-accepts: application/json
  /PaymentGatewayAccounts:
    get:
      description: This method allows you to list all stored Payment Gateway Accounts
        in the system
      operationId: PaymentGatewayAccounts_getAll
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGatewayAccountsGetAllResponse'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: List Payment Gateway Accounts
      tags:
      - PaymentGatewayAccounts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--PaymentGatewayAccounts
      x-accepts: application/json
  /PaymentGateway:
    get:
      description: "To provide you with full payment orchestration capabilities, we\
        \ have integrated with many different payment gateways and processors around\
        \ the world. This method allows you to retrieve the list of all integrated\
        \ payment gateways in our system and provide you with the relevant connection\
        \ settings required for each of them.\r\nTo see a graphical list of the supported\
        \ payment gateways, please visit our website.\r\nIf you would like us to support\
        \ a new payment gateway not on the list, please contact our support."
      operationId: PaymentGateway_listGateways
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentGatewayListGatewaysResponse'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: List all payment gateways
      tags:
      - PaymentGateway
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--PaymentGateway
      x-accepts: application/json
  /PaymentGateway/charge:
    post:
      description: "This method allows you to perform a \"charge\" operation through\
        \ your payment gateway. A \"charge\" operation will request immediate payment\
        \ from the card and the card owner will see this listed as a transaction in\
        \ their card statement.\r\nIf needed, you can void this \"charge\" operation\
        \ by using the `[DELETE] /PaymentGateway/void` method."
      operationId: PaymentGateway_performChargeOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.AuthRequestModel'
        description: Card charge model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments.OperationResult'
          description: Success
        "202":
          description: Accepted (for future processing by payment gateway)
        "400":
          description: Bad data
        "401":
          description: Not authenticated
        "409":
          description: Conflict - rejected by payment gateway
        "500":
          description: Error with payment gateway
        "503":
          description: Temporary failure with payment gateway
      security:
      - ApiKeyAuth: []
      summary: Perform a payment gateway charge operation
      tags:
      - PaymentGateway
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--PaymentGateway-charge
      x-content-type: application/json
      x-accepts: application/json
  /PaymentGateway/authorize:
    post:
      description: "This method allows you to perform an \"authorize\" operation (also\
        \ called \"preauthorization\" or \"authorization\") through your payment gateway.\
        \ When you perform the \"authorize\" operation, the bank that issued the credit\
        \ card will place an authorization of the total amount of the funds. This\
        \ is how the bank determines if the funds are available to make the purchase.\
        \ The card will not actually be “charged” until you perform the \"capture\"\
        \ operation (using our `[PUT] /PaymentGateway/capture` method).\r\n**Please\
        \ note**, different card brands and different banks allow for different time\
        \ frames on the lifespan of a payment authorization. You will need to check\
        \ with your payment processor on how long you would have between performing\
        \ an \"authorize\" operation and a \"charge\" operation\".\r\nIf needed, you\
        \ can void this \"authorize\" operation by using the `[DELETE] /PaymentGateway/void`\
        \ method"
      operationId: PaymentGateway_performAuthorizeOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.AuthRequestModel'
        description: Card charge model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments.OperationResult'
          description: Success
        "202":
          description: Accepted (for future processing by payment gateway)
        "400":
          description: Bad data
        "401":
          description: Not authenticated
        "409":
          description: Conflict - rejected by payment gateway
        "500":
          description: Error with payment gateway
        "503":
          description: Temporary failure with payment gateway
      security:
      - ApiKeyAuth: []
      summary: Perform a payment gateway authorize operation
      tags:
      - PaymentGateway
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--PaymentGateway-authorize
      x-content-type: application/json
      x-accepts: application/json
  /PaymentGateway/capture:
    put:
      description: "This method allows you to perform a \"capture\" operation on a\
        \ previously created \"authorize\" operation (see our `[POST] /PaymentGateway/authorize`\
        \ method for additional information).\r\nWhen you perform the \"authorize\"\
        \ operation, the bank that issued the credit card will place an authorization\
        \ of the total amount of the funds. This is how the bank determines if the\
        \ funds are available to make the purchase. The card will not actually be\
        \ “charged” until you perform the \"capture\" operation.\r\n**Please note**,\
        \ different card brands and different banks allow for different time frames\
        \ on the lifespan of a payment authorization. You will need to check with\
        \ your payment processor on how long you would have between performing an\
        \ \"authorize\" operation and a \"charge\" operation\"."
      operationId: PaymentGateway_performCaptureOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.CaptureVoidRequestModel'
        description: Capture or Void Request Model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments.OperationResult'
          description: Success
        "202":
          description: Accepted (for future processing by payment gateway)
        "400":
          description: Bad data
        "401":
          description: Not authenticated
        "409":
          description: Conflict - rejected by payment gateway
        "500":
          description: Error with payment gateway
        "503":
          description: Temporary failure with payment gateway
      security:
      - ApiKeyAuth: []
      summary: Perform a payment gateway capture operation
      tags:
      - PaymentGateway
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--PaymentGateway-capture
      x-content-type: application/json
      x-accepts: application/json
  /PaymentGateway/refund:
    put:
      description: "This method allows you to submit a \"refund\" operation against\
        \ a previously created \"charge\" (using `[POST] /PaymentGateway/charge`)\
        \ or \"capture\" (using `[POST] /PaymentGateway/capture`) operations."
      operationId: PaymentGateway_performRefundOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.RefundRequestModel'
        description: Capture or Void Request Model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments.OperationResult'
          description: Success
        "202":
          description: Accepted (for future processing by payment gateway)
        "400":
          description: Bad data
        "401":
          description: Not authenticated
        "409":
          description: Conflict - rejected by payment gateway
        "500":
          description: Error with payment gateway
        "503":
          description: Temporary failure with payment gateway
      security:
      - ApiKeyAuth: []
      summary: Perform a payment gateway refund operation
      tags:
      - PaymentGateway
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--PaymentGateway-refund
      x-content-type: application/json
      x-accepts: application/json
  /PaymentGateway/void:
    delete:
      description: "This method allows you to submit a \"void\" operation against\
        \ a previously created \"charge\" (using `[POST] /PaymentGateway/charge`)\
        \ or \"authorize\" (using `[POST] /PaymentGateway/authorize`) operations."
      operationId: PaymentGateway_voidOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.CaptureVoidRequestModel'
        description: Capture or Void Request Model
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments.OperationResult'
          description: Success
        "202":
          description: Accepted (for future processing by payment gateway)
        "400":
          description: Bad data
        "401":
          description: Not authenticated
        "409":
          description: Conflict - rejected by payment gateway
        "500":
          description: Error with payment gateway
        "503":
          description: Temporary failure with payment gateway
      security:
      - ApiKeyAuth: []
      summary: Perform a payment gateway Void operation
      tags:
      - PaymentGateway
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--PaymentGateway-void
      x-content-type: application/json
      x-accepts: application/json
  /ThreeDsSessions:
    post:
      operationId: ThreeDsSessions_getTokenStartOperation
      parameters:
      - description: Time to live for the returned token
        explode: true
        in: query
        name: ttl
        required: true
        schema:
          format: int32
          maximum: 3600
          minimum: 60
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDsSessionModel'
        description: The data to be validated in further requests
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.JwsOutputModel'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Get a token to start a card operation
      tags:
      - ThreeDsSessions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--ThreeDsSessions
      x-content-type: application/json
      x-accepts: application/json
  /ThreeDsSessions/opValidate:
    get:
      operationId: ThreeDsSessions_performValidationOperation
      responses:
        "200":
          description: Success
        "401":
          description: Not authenticated
      security:
      - JwsAuth: []
      summary: Perform validation of the operation using to signed data
      tags:
      - ThreeDsSessions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--ThreeDsSessions-opValidate
      x-accepts: application/json
  /ThreeDsSessions/challengeStatus:
    get:
      operationId: ThreeDsSessions_getChallengeStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Shared.Models.ThreeDsClientMessage'
          description: Success
        "401":
          description: Not authenticated
      security:
      - JwsAuth: []
      summary: "Get challenge ststus, as stored on server"
      tags:
      - ThreeDsSessions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--ThreeDsSessions-challengeStatus
      x-accepts: application/json
  /ThreeDsSessions/mpiChallengeCallback/{sessionId}:
    get:
      operationId: ThreeDsSessions_handleMpiChallengeCallback
      parameters:
      - description: The value containing data to designate the client
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      summary: Handle a callback (redirect from challenge)
      tags:
      - ThreeDsSessions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--ThreeDsSessions-mpiChallengeCallback-sessionId
      x-accepts: application/json
  /ThreeDsSessions/fingerprintCallback/{sessionId}:
    post:
      operationId: ThreeDsSessions_handleFingerprintCallback
      parameters:
      - description: The value containing data to designate the client
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          pattern: "[A-Za-z0-9]{32}"
          type: string
        style: simple
      responses:
        "200":
          description: Success
      summary: Handle a callback (redirect from device fingerprint)
      tags:
      - ThreeDsSessions
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--ThreeDsSessions-fingerprintCallback-sessionId
      x-accepts: application/json
  /Utils/apiKey:
    get:
      description: "This operation allows you to validate your API key and make sure\
        \ that it is operational. Additionally, this method will allow you to test\
        \ and check that the API is functioning properly"
      operationId: Utils_validateApiKey
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.AuthenticationResult'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Validate Apikey
      tags:
      - Utils
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--Utils-apiKey
      x-accepts: application/json
  /Tools/brand:
    get:
      description: "This method allows you to lookup the brand of the card provided.\
        \ \r\n            By providing the card's BIN / IIN (the first 6 to 11 digits\
        \ of the card number), we lookup and return the brand of the card (Visa, Mastercard,\
        \ Amex, etc.).\r\n            In addition, we will also provide the URL to\
        \ the logo of the card brand - you can then reference this image in your card\
        \ capture form."
      operationId: Tools_getBrandLookup
      parameters:
      - description: Card's BIN / IIN (the first 6 to 11 digits of the card number)
        explode: true
        in: query
        name: iin
        required: true
        schema:
          pattern: "\\d{6,11}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.BrandLookupResult'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Brand Lookup
      tags:
      - Tools
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--Tools-brand
      x-accepts: application/json
  /StringTokens:
    post:
      description: "This method allows you to submit a string to be stored and tokenized\
        \ in our system.\r\nOnce tokenized, the token ID will be returned in the body\
        \ of the response and the full token URI will be returned in the `Location`\
        \ header."
      operationId: StringTokens_storeAndTokenize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.StringTokenIntputModel'
        description: StringToken input model
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.StringTokenMetaDataOutputModel'
          description: Created
          headers:
            Location:
              description: Token URI representing the stringToken
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad data
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Store and tokenize a string
      tags:
      - StringTokens
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--StringTokens
      x-content-type: application/json
      x-accepts: application/json
  /Tools/iin:
    get:
      description: "This method allows you to lookup the metadata of the card provided.\
        \ \r\nBy providing the card's BIN / IIN (the first 6 to 11 digits of the card\
        \ number), we lookup and return the full metadata available for this card./r/nI\r\
        \nIn addition, we will also provide the URL to the logo of the card brand\
        \ - you can then reference this image in your card capture form."
      operationId: Tools_lookupMetadata
      parameters:
      - description: Card's BIN / IIN (the first 6 to 11 digits of the card number)
        explode: true
        in: query
        name: iin
        required: true
        schema:
          pattern: "\\d{6,11}"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.IinData'
          description: Success
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Metadata Lookup
      tags:
      - Tools
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--Tools-iin
      x-accepts: application/json
  /StringTokens/{token}:
    delete:
      description: This method allows you to delete a stringToken by its token
      operationId: StringTokens_deleteByToken
      parameters:
      - description: The token ID representing the string to be deleted
        explode: false
        in: path
        name: token
        required: true
        schema:
          pattern: "[A-Za-z0-9]{32}"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          description: Not authenticated
        "404":
          description: Not found
      security:
      - ApiKeyAuth: []
      summary: Delete an existing string by token
      tags:
      - StringTokens
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--StringTokens-token
      x-accepts: application/json
    get:
      description: This method allows you to retrieve the stored content of the StringToken.
      operationId: StringTokens_getContent
      parameters:
      - description: The token ID of the StringToken you would like to retrieve the
          content for
        explode: false
        in: path
        name: token
        required: true
        schema:
          pattern: "[A-Za-z0-9]{32}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.StringTokenOutputModel'
          description: Success
        "401":
          description: Not authenticated
        "404":
          description: Not found
      security:
      - ApiKeyAuth: []
      summary: Retrieve content of StringToken
      tags:
      - StringTokens
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--StringTokens-token
      x-accepts: application/json
  /StringTokens/{token}/meta:
    get:
      description: "This method allows you to retrieve the meta data of a StringToken.\r\
        \nThe response to this method will **not** retrieve the content of the StringToken\
        \ (you can do that by using `GET /StringTokens/{token}`)"
      operationId: StringTokens_getMetaData
      parameters:
      - description: Token representing the string to be retrieved
        explode: false
        in: path
        name: token
        required: true
        schema:
          pattern: "[A-Za-z0-9]{32}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.StringTokenMetaDataOutputModel'
          description: Success
        "401":
          description: Not authenticated
        "404":
          description: Not found
      security:
      - ApiKeyAuth: []
      summary: Retrieve meta data of a StringToken
      tags:
      - StringTokens
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--StringTokens-token-meta
      x-accepts: application/json
  /Tools/validate:
    post:
      description: "This method allows you to validate the card details against the\
        \ card's meta data. By providing the billing address and IP address of the\
        \ card owner, we validate those against the metadata of the card and provide\
        \ a risk assessment for this transaction.\r\nAll you would need is the card's\
        \ BIN / IIN (the first 6 to 11 digits of the card number), the billing address\
        \ and IP address.\r\nThe response of this method will include the full metadata\
        \ information for this BIN including the risk assessment."
      operationId: Tools_validateCardDetails
      parameters:
      - description: Card's BIN / IIN (the first 6 to 11 digits of the card number)
        explode: true
        in: query
        name: iin
        required: true
        schema:
          pattern: "\\d{6,11}"
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayTools_Api.Models.PayerBaseWithClientIp'
        description: payer details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.CardValidationResults'
          description: Success
        "400":
          description: Bad data
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Card Validation
      tags:
      - Tools
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--Tools-validate
      x-content-type: application/json
      x-accepts: application/json
  /Tools/luhn:
    get:
      description: "This method allows you to provide the card number and validate\
        \ it against the<a href=\"https://en.wikipedia.org/wiki/Luhn_algorithm\" target=\"\
        _blank\"> Luhn algorithm</a>.In addition, you can choose to receive the card's\
        \ metadata in the response."
      operationId: Tools_validateLuhnCard
      parameters:
      - description: The full card number to be validated.
        explode: true
        in: query
        name: number
        required: true
        schema:
          type: string
        style: form
      - description: An optional indicator to specify whether the card metadata should
          be included in the response.
        explode: true
        in: query
        name: metaData
        required: false
        schema:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--Tools-luhn-get-parameters-1-schema
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayTools_Api.Models.LuhnCheckResultsWithIinData'
          description: Success
        "400":
          description: Bad data
        "401":
          description: Not authenticated
      security:
      - ApiKeyAuth: []
      summary: Luhn Algorithm Validation
      tags:
      - Tools
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--Tools-luhn
      x-accepts: application/json
components:
  schemas:
    NetworkToken.CardSource:
      enum:
      - OnFile
      - UserInput
      type: string
    NetworkToken.RequestSource:
      enum:
      - Merchant
      - CardHolder
      - Issuer
      type: string
    NetworkToken.TokenizationResult:
      example:
        tokenizedCard:
          expirationYear: 6
          number: number
          expirationMonth: 0
        tokenId: tokenId
        resultCode: null
        brand: null
      properties:
        resultCode:
          $ref: '#/components/schemas/NetworkToken.TokenizationResultCode'
        brand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
        tokenId:
          nullable: true
          type: string
        tokenizedCard:
          $ref: '#/components/schemas/Payments.BankCardBase'
      type: object
      x-konfig-is-used-in-successful-response: true
    NetworkToken.TokenizationResultCode:
      enum:
      - Success
      - Failure
      - NotSupported
      type: string
    PayTools_Api.Models.AuthRequestModel:
      description: Model for a Charge/Pre-authorize request for card processing via
        a payment gateway
      properties:
        currency:
          description: The currency of the transaction. Based on the <a href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
            target="_blank">ISO 4217</a> standard.
          minLength: 1
          type: string
        isDigital:
          description: This field is an additional optional parameter used by some
            of our payment processors. Please read our additional guidance section
            for payment processors that use this and other parameters
          type: boolean
        orderDesc:
          description: This field is an additional optional parameter used by some
            of our payment processors. Please read our additional guidance section
            for payment processors that use this and other parameters
          nullable: true
          type: string
        payerDetails:
          $ref: '#/components/schemas/PayTools_Api.Models.PayerDetails'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        amount:
          description: "The amount to be charged (the amount should be in major units\
            \ - for example, 10.23)"
          format: double
          type: number
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
        paymentGatewayAccountName:
          description: "The reference name provided to the stored Payment Gateway\
            \ Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please\
            \ note**, if you provide us with both this parameter and the raw credentials\
            \ in the `paymentGatewayAccount` object, this parameter will be ignored\
            \ and the raw credentials will take precedence."
          nullable: true
          type: string
        certificateName:
          description: Optional parameter if the payment gateway requires authentication
            using a client certificate. The name of the certificate that was stored
            in our system via our <a href="https://portal.epaytools.com" target="_blank">users
            portal</a>
          maxLength: 128
          nullable: true
          type: string
        paymentGatewayAccount:
          $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
        networkTokenBrand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
      required:
      - amount
      - card
      - currency
      type: object
    PayTools_Api.Models.AuthenticationResult:
      description: Model for display authentication results
      example:
        accountId: 0
        userName: userName
        isSandbox: true
        status: status
      properties:
        status:
          description: Status
          nullable: true
          type: string
        userName:
          description: Username
          nullable: true
          type: string
        accountId:
          description: Account Id
          format: int64
          type: integer
        isSandbox:
          description: Is this a sandbox user
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.BrandLookupResult:
      description: Output model for Brand lookup
      example:
        brandLogoUrl: brandLogoUrl
        brand: brand
      properties:
        brand:
          description: The card's brand that was identified
          nullable: true
          type: string
        brandLogoUrl:
          description: The url to the brand logo
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.CaptureVoidRequestModel:
      description: Model for a Capturing or voiding a previously Pre-authorize request
        via a payment gateway
      properties:
        currency:
          description: The currency of the transaction. Based on the <a href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
            target="_blank">ISO 4217</a> standard.
          minLength: 1
          type: string
        refTransId:
          description: The transaction ID that this operation is referring to.
          minLength: 1
          type: string
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        amount:
          description: "The amount to be charged (the amount should be in major units\
            \ - for example, 10.23)"
          format: double
          type: number
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
        paymentGatewayAccountName:
          description: "The reference name provided to the stored Payment Gateway\
            \ Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please\
            \ note**, if you provide us with both this parameter and the raw credentials\
            \ in the `paymentGatewayAccount` object, this parameter will be ignored\
            \ and the raw credentials will take precedence."
          nullable: true
          type: string
        certificateName:
          description: Optional parameter if the payment gateway requires authentication
            using a client certificate. The name of the certificate that was stored
            in our system via our <a href="https://portal.epaytools.com" target="_blank">users
            portal</a>
          maxLength: 128
          nullable: true
          type: string
        paymentGatewayAccount:
          $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
        networkTokenBrand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
      required:
      - amount
      - card
      - currency
      - refTransId
      type: object
    PayTools_Api.Models.CardBaseWithSecurityCode:
      description: Base model for card with Security code
      properties:
        cvv:
          description: Card security code (digits on back of card)
          nullable: true
          pattern: "^\\d{3,4}$"
          type: string
        cardNumber:
          description: "Card number (PAN) or a Reference to a Tokenized string. A\
            \ Token should be referenced in the format @TOKEN, e.g \"@nQGywsQE9gbURtrXEjTZwtWqeMdK9nsO\""
          minLength: 1
          pattern: "^(\\d{12,20}|@[A-Za-z0-9]{32})$"
          type: string
        expirationYear:
          description: Expiration year
          format: int32
          type: integer
        expirationMonth:
          description: Expiration month
          format: int32
          maximum: 12
          minimum: 1
          type: integer
      required:
      - cardNumber
      - expirationMonth
      - expirationYear
      type: object
    PayTools_Api.Models.CardInputModel:
      description: The card details that should be charged. You can either provide
        us with the raw card details or provide a reference to the stored card details
        in a token.
      properties:
        ownerID:
          description: Card owner Id
          nullable: true
          type: string
        issueNumber:
          description: Card Issue Number
          nullable: true
          type: string
        cvv:
          description: Card security code (digits on back of card)
          nullable: true
          pattern: "^\\d{3,4}$"
          type: string
        threeDSAuthentication:
          $ref: '#/components/schemas/PayTools_Api.Models.ThreeDSAuthenticationInputModel'
        cardType:
          $ref: '#/components/schemas/Payments.CardTypes'
        cardHolderName:
          description: Cardholder name (as apears on card)
          maxLength: 30
          minLength: 3
          type: string
        cardNumber:
          description: "Card number (PAN) or a Reference to a Tokenized string. A\
            \ Token should be referenced in the format @TOKEN, e.g \"@nQGywsQE9gbURtrXEjTZwtWqeMdK9nsO\""
          minLength: 1
          pattern: "^(\\d{12,20}|@[A-Za-z0-9]{32})$"
          type: string
        expirationYear:
          description: Expiration year
          format: int32
          type: integer
        expirationMonth:
          description: Expiration month
          format: int32
          maximum: 12
          minimum: 1
          type: integer
      required:
      - cardHolderName
      - cardNumber
      - expirationMonth
      - expirationYear
      type: object
    PayTools_Api.Models.CardOpsChargeRequest:
      description: Model for a Charge request for card processing via a payment gateway
        using Card operations
      properties:
        payerDetails:
          $ref: '#/components/schemas/PayTools_Api.Models.PayerDetailsNoIpAddress'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
      required:
      - card
      type: object
    PayTools_Api.Models.CardValidationResults:
      description: Results for a card validation request
      example:
        issuerCountry: issuerCountry
        countryByIP: countryByIP
        riskLevel: riskLevel
        issuerName: issuerName
        cardType: cardType
        anonymousProxyUsed: true
        description: description
        cardCategory: cardCategory
        countryFromBillingAddress: countryFromBillingAddress
        cardBrand: cardBrand
      properties:
        description:
          description: A description of the risk that was identified for this transaction.
          nullable: true
          type: string
        riskLevel:
          description: "The risk level associated with this transaction (possible\
            \ values are `VeryLow`, `Low`, `High` and `VeryHigh`)"
          nullable: true
          type: string
        cardBrand:
          description: "The card brand (AMERICAN EXPRESS, VISA, MASTERCARD, JCB etc)"
          nullable: true
          type: string
        cardType:
          description: "Type of card (e.g 'CREDIT', 'DEBIT', etc.)"
          nullable: true
          type: string
        cardCategory:
          description: "Card category (e.g 'GIFT', 'PROPRIETARY' etc.)"
          nullable: true
          type: string
        issuerName:
          description: Name of Card issuer (e.g 'Bank of America')
          nullable: true
          type: string
        issuerCountry:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>) of the card issuer's country
          nullable: true
          type: string
        countryByIP:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>) of the country detected by the Payer's IP address
          nullable: true
          type: string
        countryFromBillingAddress:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>) from the Payer's billing address
          nullable: true
          type: string
        anonymousProxyUsed:
          description: Is the Payer's IP address coming from an Anonymous Proxy
          type: boolean
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.CustomFormMetaModel:
      description: Model for Custom Form meta-data retrieval
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        name: name
        updateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        creationTime:
          description: Time the Custom Form was initially created
          format: date-time
          type: string
        updateTime:
          description: Time the Custom Form was lastly updated
          format: date-time
          nullable: true
          type: string
        name:
          description: The Custom Form name. It should be used for referencing the
            form for management and for usage
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.CustomFormUploadModel:
      description: Model for returning the url to an uploaded custom form
      example:
        formBaseUrl: formBaseUrl
      properties:
        formBaseUrl:
          description: The base url to an uploaded custom form
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.CvvOpsChargeRequest:
      description: Model for a Charge request of an existing card after capturing
        security code (CVV) for card processing via a payment gateway using Card operations
      properties:
        cvv:
          description: The card details that should be charged. You can either provide
            us with the raw card details or provide a reference to the stored card
            details in a token.
          minLength: 1
          pattern: "^\\d{3,4}$"
          type: string
      required:
      - cvv
      type: object
    PayTools_Api.Models.IinData:
      description: IIN data
      example:
        brandLogoUrl: brandLogoUrl
        bin: bin
        countryCode: countryCode
        cardType: cardType
        cardBrand: cardBrand
        category: category
        issuingOrganization: issuingOrganization
      properties:
        bin:
          description: The longest match of the first 6 to 11 digits of the card number
            that we were able to match
          nullable: true
          type: string
        cardBrand:
          description: "The card brand (AMERICAN EXPRESS, VISA, MASTERCARD, JCB etc)"
          nullable: true
          type: string
        cardType:
          description: "The type of card (DEBIT, CREDIT, 'DEBIT OR CREDIT', CHARGE\
            \ CARD)"
          nullable: true
          type: string
        category:
          description: "The category of the card (CLASSIC, BUSINESS, STANDARD, PERSONAL,\
            \ etc)"
          nullable: true
          type: string
        issuingOrganization:
          description: The name of the entity (usually bank) that issued the card
          nullable: true
          type: string
        countryCode:
          description: The 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>) where the card was issued
          nullable: true
          type: string
        brandLogoUrl:
          description: The url to the brand logo
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.JwsMultipleOutputModel:
      description: The model used to return a valid Jws with multiple tokens
      example:
        authToken: authToken
        threeDsAuthToken: threeDsAuthToken
      properties:
        threeDsAuthToken:
          description: The jws (token) value to be used for 3DS
          nullable: true
          type: string
        authToken:
          description: The jws (token) value to be used in subsequent card operation
            methods
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.JwsOutputModel:
      description: The model used to return a valid Jws with a single Token
      example:
        authToken: authToken
      properties:
        authToken:
          description: The jws (token) value to be used in subsequent card operation
            methods
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    ? PayTools_Api.Models.JwsOutputModel1PayTools_Api.Models.StringTokenMetaDataOutputModelPayToolsApiVersion1.0.7.15CultureneutralPublicKeyTokennull
    : description: The model used to return a valid Jws with payload
      example:
        payload:
          createTime: 2000-01-23T04:56:07.000+00:00
          token: token
        authToken: authToken
      properties:
        payload:
          $ref: '#/components/schemas/PayTools_Api.Models.StringTokenMetaDataOutputModel'
        authToken:
          description: The jws (token) value to be used in subsequent card operation
            methods
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    ? PayTools_Api.Models.JwsOutputModel1PayTools_Bl.Authentication.ChargeCardSignedModelPayToolsBlVersion1.0.0.0CultureneutralPublicKeyTokennull
    : description: The model used to return a valid Jws with payload
      example:
        payload:
          crg_d:
            ref: ref
            dig: true
            uan: uan
            ucc: ucc
            dsc: dsc
            amt:
              cur: null
              amt: 5.637376656633329
          crg_rs:
            gatewayResultCode: gatewayResultCode
            amount: 0.8008281904610115
            gatewayReference: gatewayReference
            authorizationCode: authorizationCode
            gatewayName: gatewayName
            gatewayResultSubCode: gatewayResultSubCode
            gatewayResultSubDescription: gatewayResultSubDescription
            gatewayToken: ""
            gatewayResultDescription: gatewayResultDescription
            operationType: null
            currency: null
            operationResultDescription: operationResultDescription
            operationResultCode: null
            customGatewayResponse: ""
          card:
            expirationYear: 2025
            cardHolderName: cardHolderName
            cardType: null
            expirationMonth: 7
            cardToken: cardToken
        authToken: authToken
      properties:
        payload:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargeCardSignedModel'
        authToken:
          description: The jws (token) value to be used in subsequent card operation
            methods
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.JwsOutputModel1Payments.OperationResultPaymentsVersion0.0.0.0CultureneutralPublicKeyTokennull:
      description: The model used to return a valid Jws with payload
      example:
        payload:
          gatewayResultCode: gatewayResultCode
          amount: 0.8008281904610115
          gatewayReference: gatewayReference
          authorizationCode: authorizationCode
          gatewayName: gatewayName
          gatewayResultSubCode: gatewayResultSubCode
          gatewayResultSubDescription: gatewayResultSubDescription
          gatewayToken: ""
          gatewayResultDescription: gatewayResultDescription
          operationType: null
          currency: null
          operationResultDescription: operationResultDescription
          operationResultCode: null
          customGatewayResponse: ""
        authToken: authToken
      properties:
        payload:
          $ref: '#/components/schemas/Payments.OperationResult'
        authToken:
          description: The jws (token) value to be used in subsequent card operation
            methods
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    ? PayTools_Api.Models.JwsOutputModel1pciBooking.IINLookup.Library.CardValidationResultpciBooking.IINLookup.LibraryVersion1.0.4.0CultureneutralPublicKeyTokennull
    : description: The model used to return a valid Jws with payload
      example:
        payload:
          issuerCountry: issuerCountry
          countryByIP: countryByIP
          riskLevel: null
          issuerName: issuerName
          cardType: cardType
          anonymousProxyUsed: true
          description: description
          cardCategory: cardCategory
          countryFromBillingAddress: countryFromBillingAddress
          cardBrand: cardBrand
        authToken: authToken
      properties:
        payload:
          $ref: '#/components/schemas/pciBooking.IINLookup.Library.CardValidationResult'
        authToken:
          description: The jws (token) value to be used in subsequent card operation
            methods
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.LuhnCheckResultsWithIinData:
      description: Luhn Check Results with IIn Data
      example:
        iinData:
          brandLogoUrl: brandLogoUrl
          bin: bin
          countryCode: countryCode
          cardType: cardType
          cardBrand: cardBrand
          category: category
          issuingOrganization: issuingOrganization
        luhnValid: true
        error: error
      properties:
        iinData:
          $ref: '#/components/schemas/PayTools_Api.Models.IinData'
        luhnValid:
          description: Indicates a successful luhn check
          type: boolean
        error:
          description: Error description
          nullable: true
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.NetworkTokenizationDeleteTokenRequest:
      description: Network Tokenization Request
      properties:
        source:
          $ref: '#/components/schemas/NetworkToken.RequestSource'
        brand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
        tokenId:
          description: Token Id within the Brand
          maxLength: 255
          minLength: 1
          type: string
        reason:
          description: Reason for deletion
          maxLength: 255
          nullable: true
          type: string
      required:
      - source
      - tokenId
      type: object
    PayTools_Api.Models.NetworkTokenizationPayer:
      description: Model for accepting payer details for Network Tokenization
      properties:
        email:
          description: Email address
          format: email
          nullable: true
          type: string
        firstName:
          description: First Name
          minLength: 1
          type: string
        lastName:
          description: Lasst Name
          minLength: 1
          type: string
        phone:
          description: Phone number
          format: tel
          nullable: true
          type: string
        address1:
          description: 1st address line
          nullable: true
          type: string
        address2:
          description: 2nd address line
          nullable: true
          type: string
        address3:
          description: 3rd address line
          nullable: true
          type: string
        postCode:
          description: Postal code or Zip code
          nullable: true
          type: string
        clientIPAddress:
          description: Client IP address
          minLength: 1
          type: string
        city:
          description: City
          nullable: true
          type: string
        stateProvince:
          description: State or Province
          nullable: true
          type: string
        countryCode:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>)
          minLength: 1
          pattern: "[A-Z]{2}"
          type: string
      required:
      - clientIPAddress
      - countryCode
      - firstName
      - lastName
      type: object
    PayTools_Api.Models.NetworkTokenizationTokenizeRequest:
      description: Network Tokenization Request
      properties:
        tokenizationRequest:
          $ref: '#/components/schemas/PayTools_Api.Models.TokenizationRequest'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardBaseWithSecurityCode'
      type: object
    PayTools_Api.Models.PayerBase:
      description: The billing information of the card owner to be used for validation
      properties:
        city:
          description: City
          nullable: true
          type: string
        stateProvince:
          description: State or Province
          nullable: true
          type: string
        countryCode:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>)
          minLength: 1
          pattern: "[A-Z]{2}"
          type: string
      required:
      - countryCode
      type: object
    PayTools_Api.Models.PayerBaseWithClientIp:
      description: "The billing information of the card owner to be used for validation,\
        \ incl. Client Ip address"
      properties:
        clientIPAddress:
          description: Client IP address
          minLength: 1
          type: string
        city:
          description: City
          nullable: true
          type: string
        stateProvince:
          description: State or Province
          nullable: true
          type: string
        countryCode:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>)
          minLength: 1
          pattern: "[A-Z]{2}"
          type: string
      required:
      - clientIPAddress
      - countryCode
      type: object
    PayTools_Api.Models.PayerDetails:
      description: The billing information of the card owner
      properties:
        address1:
          description: 1st address line
          nullable: true
          type: string
        address2:
          description: 2nd address line
          nullable: true
          type: string
        address3:
          description: 3rd address line
          nullable: true
          type: string
        postCode:
          description: Postal code or Zip code
          nullable: true
          type: string
        clientIPAddress:
          description: Client IP address
          minLength: 1
          type: string
        city:
          description: City
          nullable: true
          type: string
        stateProvince:
          description: State or Province
          nullable: true
          type: string
        countryCode:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>)
          minLength: 1
          pattern: "[A-Z]{2}"
          type: string
      required:
      - clientIPAddress
      - countryCode
      type: object
    PayTools_Api.Models.PayerDetailsNoIpAddress:
      description: "The billing information of the card owner, without Ip Address"
      properties:
        address1:
          description: 1st address line
          nullable: true
          type: string
        address2:
          description: 2nd address line
          nullable: true
          type: string
        address3:
          description: 3rd address line
          nullable: true
          type: string
        postCode:
          description: Postal code or Zip code
          nullable: true
          type: string
        city:
          description: City
          nullable: true
          type: string
        stateProvince:
          description: State or Province
          nullable: true
          type: string
        countryCode:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>)
          minLength: 1
          pattern: "[A-Z]{2}"
          type: string
      required:
      - countryCode
      type: object
    PayTools_Api.Models.PaymentGatewayAccount:
      description: "The raw credentials necessary to connect to the chosen payment\
        \ gateway as defined in `GET /PaymentGateway`.\r\n**Please note**, if you\
        \ provide us with both the raw details here and a stored Payment Gateway Account\
        \ in the `paymentGatewayAccountName` parameter, these credentials will take\
        \ precedence."
      properties:
        paymentGatewayName:
          description: Unique name of the Payment Gateway the account information
            relates to.
          nullable: true
          type: string
        credentials:
          description: "A list of key-value pairs that represents your credentials\
            \ within the Payment gateway. \r\nEach key should represent a parameter\
            \ listed in the \"CredentialsNames\" element of the response from the\
            \ list all payment gateways method at `[GET] /paymentGateway`\r\nExample:\r\
            \n\"Credentials\": [\r\n   {\r\n       \"Key\": \"PrivateKey\",\r\n  \
            \     \"Value\": \"VBtt666M/G098098vgdewvk0Mc-GH\"\r\n   }\r\n]"
          items:
            $ref: '#/components/schemas/System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e'
          nullable: true
          type: array
      type: object
    PayTools_Api.Models.PaymentGatewayAccountBriefOutputModel:
      description: Output Model for designating a payment gateway account with a client
        certificate
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        paymentGatewayName: paymentGatewayName
        name: name
      properties:
        name:
          description: Name of account
          nullable: true
          type: string
        paymentGatewayName:
          description: Unique name of the Payment Gateway the account information
            relates to.
          nullable: true
          type: string
        creationTime:
          description: Date and time the credentials were stored
          format: date-time
          type: string
      type: object
    PayTools_Api.Models.PaymentGatewayAccountFullOutputModel:
      description: Output Model for designating a payment gateway account
      example:
        creationTime: 2000-01-23T04:56:07.000+00:00
        credentials:
        - value: value
          key: key
        - value: value
          key: key
        paymentGatewayName: paymentGatewayName
        name: name
      properties:
        name:
          description: Name of account
          nullable: true
          type: string
        creationTime:
          description: Date and time the credentials were stored
          format: date-time
          type: string
        paymentGatewayName:
          description: Unique name of the Payment Gateway the account information
            relates to.
          nullable: true
          type: string
        credentials:
          description: "A list of key-value pairs that represents your credentials\
            \ within the Payment gateway. \r\nEach key should represent a parameter\
            \ listed in the \"CredentialsNames\" element of the response from the\
            \ list all payment gateways method at `[GET] /paymentGateway`\r\nExample:\r\
            \n\"Credentials\": [\r\n   {\r\n       \"Key\": \"PrivateKey\",\r\n  \
            \     \"Value\": \"VBtt666M/G098098vgdewvk0Mc-GH\"\r\n   }\r\n]"
          items:
            $ref: '#/components/schemas/System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e'
          nullable: true
          type: array
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.PaymentGatewayAccountInputModel:
      description: Input Model for designating a payment gateway account
      properties:
        paymentGatewayName:
          description: Unique name of the Payment Gateway the account information
            relates to.
          nullable: true
          type: string
        credentials:
          description: "A list of key-value pairs that represents your credentials\
            \ within the Payment gateway. \r\nEach key should represent a parameter\
            \ listed in the \"CredentialsNames\" element of the response from the\
            \ list all payment gateways method at `[GET] /paymentGateway`\r\nExample:\r\
            \n\"Credentials\": [\r\n   {\r\n       \"Key\": \"PrivateKey\",\r\n  \
            \     \"Value\": \"VBtt666M/G098098vgdewvk0Mc-GH\"\r\n   }\r\n]"
          items:
            $ref: '#/components/schemas/System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e'
          nullable: true
          type: array
      type: object
    PayTools_Api.Models.PaymentGatewayDescriptionModel:
      description: Model for Payment Gateway Description
      example:
        supportsNetworkToken: true
        displayName: displayName
        credentialsNames:
        - credentialsNames
        - credentialsNames
        name: name
        description: description
        paymentGatewayUrl: paymentGatewayUrl
      properties:
        description:
          description: Payment Gateway Description (informational)
          nullable: true
          type: string
        name:
          description: The ePayTools internal identifier for this Payment Gateway
          nullable: true
          type: string
        displayName:
          description: The name of the Payment Gateway in friendly format
          nullable: true
          type: string
        paymentGatewayUrl:
          description: Url to Payment Gateway site (informational)
          nullable: true
          type: string
        credentialsNames:
          description: A list of all credential parameters needed to provide for this
            Payment Gateway
          items:
            type: string
          nullable: true
          type: array
        supportsNetworkToken:
          description: Indicates whether the Payment gateway supports Network Token
            (from Card schemes)
          type: boolean
      type: object
    PayTools_Api.Models.RefundRequestModel:
      description: Model for UPG refund operation
      properties:
        currency:
          description: The currency of the transaction. Based on the <a href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
            target="_blank">ISO 4217</a> standard.
          minLength: 1
          type: string
        refTransId:
          description: The transaction ID that this operation is referring to.
          minLength: 1
          type: string
        payerDetails:
          $ref: '#/components/schemas/PayTools_Api.Models.PayerDetails'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        amount:
          description: "The amount to be charged (the amount should be in major units\
            \ - for example, 10.23)"
          format: double
          type: number
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
        paymentGatewayAccountName:
          description: "The reference name provided to the stored Payment Gateway\
            \ Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please\
            \ note**, if you provide us with both this parameter and the raw credentials\
            \ in the `paymentGatewayAccount` object, this parameter will be ignored\
            \ and the raw credentials will take precedence."
          nullable: true
          type: string
        certificateName:
          description: Optional parameter if the payment gateway requires authentication
            using a client certificate. The name of the certificate that was stored
            in our system via our <a href="https://portal.epaytools.com" target="_blank">users
            portal</a>
          maxLength: 128
          nullable: true
          type: string
        paymentGatewayAccount:
          $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
        networkTokenBrand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
      required:
      - amount
      - card
      - currency
      - refTransId
      type: object
    PayTools_Api.Models.StringTokenIntputModel:
      description: Model for providing a string to be tokenized
      properties:
        payload:
          description: The content of the string you would like to tokenize
          maxLength: 16384
          minLength: 1
          type: string
      required:
      - payload
      type: object
    PayTools_Api.Models.StringTokenMetaDataOutputModel:
      description: Model for display a string token meta-data
      example:
        createTime: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        token:
          description: Token ID representing the stringToken
          nullable: true
          type: string
        createTime:
          description: Date and time the string was stored
          format: date-time
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.StringTokenOutputModel:
      description: "Model for display a string token, including the clear text"
      example:
        clearPayload: clearPayload
        createTime: 2000-01-23T04:56:07.000+00:00
        token: token
      properties:
        clearPayload:
          description: The content of the StringToken that was stored in our system
          nullable: true
          type: string
        token:
          description: Token ID representing the stringToken
          nullable: true
          type: string
        createTime:
          description: Date and time the string was stored
          format: date-time
          type: string
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.ThreeDSAuthenticationInputModel:
      description: Model for 3DS authentication data
      properties:
        version:
          description: 3ds Version
          maxLength: 5
          minLength: 1
          type: string
        authenticationValue:
          description: Authentication value
          minLength: 1
          type: string
        eci:
          description: Electronic Commerce Indicator
          maxLength: 2
          minLength: 1
          type: string
        xid:
          description: transaction ID from the 3D Secure provider
          maxLength: 40
          minLength: 1
          type: string
        merchantName:
          description: Merchant name
          maxLength: 40
          minLength: 1
          type: string
      required:
      - authenticationValue
      - eci
      - merchantName
      - version
      - xid
      type: object
    PayTools_Api.Models.ThreeDsMerchantOutputModel:
      description: Model for response of 3DS Merchant
      example:
        name: name
        threeDsMerchant:
          merchantDisplayName: merchantDisplayName
          merchantRequestorIdSuffix: merchantRequestorIdSuffix
          brands:
          - merchantId: merchantId
            bin: bin
            mcc: mcc
            brand: null
          - merchantId: merchantId
            bin: bin
            mcc: mcc
            brand: null
          merchantCountry: merchantCountry
          merchantUrl: https://openapi-generator.tech
          acquirerName: acquirerName
          merchantName: merchantName
      properties:
        name:
          description: Account name (Name on system)
          nullable: true
          type: string
        threeDsMerchant:
          $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsMerchant'
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Api.Models.TokenizationRequest:
      description: Model for sending Network Tokenization Request
      properties:
        consumerLanguage:
          description: Iso-369-1 2-letter language code
          maxLength: 2
          minLength: 2
          nullable: true
          type: string
        cardHolder:
          $ref: '#/components/schemas/PayTools_Api.Models.NetworkTokenizationPayer'
        deviceScore:
          description: Device score
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        accountScore:
          description: Account score
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        deviceLocationLat:
          description: Device latitude -90 to 90
          format: double
          maximum: 90
          minimum: -90
          nullable: true
          type: number
        deviceLocationLon:
          description: Device longitude -90 to 90
          format: double
          maximum: 180
          minimum: -180
          nullable: true
          type: number
        deviceIpAddress:
          description: Ip address of device
          nullable: true
          type: string
        cardSource:
          $ref: '#/components/schemas/NetworkToken.CardSource'
      type: object
    PayTools_Api.Models.TopBrands:
      description: List of to brands and logos
      example:
        prefixes:
        - key: prefixes
        - key: prefixes
        logos:
          key: logos
      properties:
        prefixes:
          description: Top credit card brands for lookup of up to 5 first digits.
            It covers 90% of the cases
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          readOnly: true
          type: array
        logos:
          additionalProperties:
            nullable: true
            type: string
          description: Dictionary of Brand name => brand logo Url
          nullable: true
          readOnly: true
          type: object
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Bl.Authentication.ChargeCardSignedModel:
      description: Model for charge operation result after providing Cvv
      example:
        crg_d:
          ref: ref
          dig: true
          uan: uan
          ucc: ucc
          dsc: dsc
          amt:
            cur: null
            amt: 5.637376656633329
        crg_rs:
          gatewayResultCode: gatewayResultCode
          amount: 0.8008281904610115
          gatewayReference: gatewayReference
          authorizationCode: authorizationCode
          gatewayName: gatewayName
          gatewayResultSubCode: gatewayResultSubCode
          gatewayResultSubDescription: gatewayResultSubDescription
          gatewayToken: ""
          gatewayResultDescription: gatewayResultDescription
          operationType: null
          currency: null
          operationResultDescription: operationResultDescription
          operationResultCode: null
          customGatewayResponse: ""
        card:
          expirationYear: 2025
          cardHolderName: cardHolderName
          cardType: null
          expirationMonth: 7
          cardToken: cardToken
      properties:
        crg_rs:
          $ref: '#/components/schemas/Payments.OperationResult'
        card:
          $ref: '#/components/schemas/PayTools_Shared.Models.Card.StoredCard'
        crg_d:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
      type: object
    PayTools_Bl.Authentication.ChargePresetData:
      description: Data to be used in Charge request
      example:
        ref: ref
        dig: true
        uan: uan
        ucc: ucc
        dsc: dsc
        amt:
          cur: null
          amt: 5.637376656633329
      properties:
        dsc:
          description: Order description
          nullable: true
          type: string
        ref:
          description: Creator reference
          nullable: true
          type: string
        dig:
          description: Is it digital goods
          type: boolean
        amt:
          $ref: '#/components/schemas/PayTools_Shared.Models.MoneyModel'
        uan:
          description: The Upg Account name
          nullable: true
          type: string
        ucc:
          description: The Upg Client Certificate name
          nullable: true
          type: string
      type: object
    PayTools_Bl.Authentication.CvvSignedDataModel:
      description: Model for signing a Cvv Operation
      example:
        crg_d:
          ref: ref
          dig: true
          uan: uan
          ucc: ucc
          dsc: dsc
          amt:
            cur: null
            amt: 5.637376656633329
        card:
          expirationYear: 2025
          cardHolderName: cardHolderName
          cardType: null
          expirationMonth: 7
          cardToken: cardToken
      properties:
        card:
          $ref: '#/components/schemas/PayTools_Shared.Models.Card.StoredCard'
        crg_d:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Bl.Authentication.PreSignedDataModel:
      description: Model for initial request for a Card operation session
      properties:
        threeDsSessionModel:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDsSessionModel'
        vld:
          $ref: '#/components/schemas/pciBooking.IINLookup.Library.RiskLevel'
        "3ds":
          $ref: '#/components/schemas/PayTools_Shared.Enums.Perform3ds'
        crg:
          description: Is Card charge required for this session
          type: boolean
        tkn:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.TokenizationAction'
        crg_d:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
      type: object
    PayTools_Bl.Authentication.SignedData:
      description: Class to represent signed data
      example:
        crg_rq:
          userToken: userToken
          amount:
            amount: 1.4658129805029452
            iso4217CurrencyNumber: iso4217CurrencyNumber
            currencyCode: null
            formattedAmount: formattedAmount
            amountInLargestUnits: 5.962133916683182
          isDigitalGoods: true
          generateToken: true
          bankCard:
            expirationYear: 6
            number: number
            nameOnCard: nameOnCard
            issueNumber: issueNumber
            securityCode: securityCode
            expirationMonth: 0
            type: null
            ownerId: ownerId
          myReference: myReference
          payer:
            lastName: lastName
            address: address
            address3: address3
            address2: address2
            city: city
            address1: address1
            stateProvince: stateProvince
            fullName: fullName
            cardOwnerId: cardOwnerId
            firstName: firstName
            phone: phone
            countryCode: countryCode
            validIpAddress: validIpAddress
            postCode: postCode
            email: email
            clientIPAddress: clientIPAddress
          threeDS:
            xid: xid
            eci: eci
            version: version
            authenticationValue: authenticationValue
          orderDesc: orderDesc
        tkn_rs: tkn_rs
        "3ds": null
        crg_d:
          ref: ref
          dig: true
          uan: uan
          ucc: ucc
          dsc: dsc
          amt:
            cur: null
            amt: 5.637376656633329
        tkn: null
        crg: true
        "3ds_d":
          amt:
            cur: null
            amt: 5.637376656633329
          sid: sid
          mrc:
            msf: msf
            brds:
            - brd: null
              bin: bin
              mid: mid
              mcc: mcc
            - brd: null
              bin: bin
              mid: mid
              mcc: mcc
            cnt: cnt
            mnm: mnm
            mds: mds
            url: https://openapi-generator.tech
        vld_rq:
          city: city
          countryCode: countryCode
          stateProvince: stateProvince
          iin: iin
          clientIPAddress: clientIPAddress
        vld_rs:
          issuerCountry: issuerCountry
          countryByIP: countryByIP
          riskLevel: null
          issuerName: issuerName
          cardType: cardType
          anonymousProxyUsed: true
          description: description
          cardCategory: cardCategory
          countryFromBillingAddress: countryFromBillingAddress
          cardBrand: cardBrand
        crg_rs:
          gatewayResultCode: gatewayResultCode
          amount: 0.8008281904610115
          gatewayReference: gatewayReference
          authorizationCode: authorizationCode
          gatewayName: gatewayName
          gatewayResultSubCode: gatewayResultSubCode
          gatewayResultSubDescription: gatewayResultSubDescription
          gatewayToken: ""
          gatewayResultDescription: gatewayResultDescription
          operationType: null
          currency: null
          operationResultDescription: operationResultDescription
          operationResultCode: null
          customGatewayResponse: ""
        vld: null
      properties:
        vld_rq:
          $ref: '#/components/schemas/pciBooking.IINLookup.Library.CardValidationRequest'
        vld_rs:
          $ref: '#/components/schemas/pciBooking.IINLookup.Library.CardValidationResult'
        crg_rq:
          $ref: '#/components/schemas/Payments.ChargeRequest'
        crg_rs:
          $ref: '#/components/schemas/Payments.OperationResult'
        tkn_rs:
          description: Result from tokenization
          nullable: true
          type: string
        "3ds_d":
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDsPresetData'
        vld:
          $ref: '#/components/schemas/pciBooking.IINLookup.Library.RiskLevel'
        "3ds":
          $ref: '#/components/schemas/PayTools_Shared.Enums.Perform3ds'
        crg:
          description: Is Card charge required for this session
          type: boolean
        tkn:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.TokenizationAction'
        crg_d:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Bl.Authentication.ThreeDMerchant:
      description: The 3DS Merchant data to be signed
      example:
        msf: msf
        brds:
        - brd: null
          bin: bin
          mid: mid
          mcc: mcc
        - brd: null
          bin: bin
          mid: mid
          mcc: mcc
        cnt: cnt
        mnm: mnm
        mds: mds
        url: https://openapi-generator.tech
      properties:
        mnm:
          description: Merchant name
          minLength: 1
          type: string
        mds:
          description: Merchant's display name
          minLength: 1
          type: string
        msf:
          description: Merchant's Requestor Id suffix
          minLength: 1
          type: string
        cnt:
          description: Merchant's Country (3-digit ISO 3166-1 numeric)
          minLength: 1
          type: string
        url:
          description: Merchant's Url
          format: uri
          minLength: 1
          type: string
        brds:
          description: List of supported brands
          items:
            $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDsBrand'
          type: array
      required:
      - brds
      - cnt
      - mds
      - mnm
      - msf
      - url
      type: object
    PayTools_Bl.Authentication.ThreeDsBrand:
      description: A brand for 3DS authentication
      example:
        brd: null
        bin: bin
        mid: mid
        mcc: mcc
      properties:
        brd:
          $ref: '#/components/schemas/Payments.CardTypes'
        bin:
          description: Brand's Bin
          minLength: 1
          type: string
        mid:
          description: Merchant Id
          minLength: 1
          type: string
        mcc:
          description: Brand's MCC
          minLength: 1
          type: string
      required:
      - bin
      - mcc
      - mid
      type: object
    PayTools_Bl.Authentication.ThreeDsPresetData:
      description: Data to be used in 3DS authentication request
      example:
        amt:
          cur: null
          amt: 5.637376656633329
        sid: sid
        mrc:
          msf: msf
          brds:
          - brd: null
            bin: bin
            mid: mid
            mcc: mcc
          - brd: null
            bin: bin
            mid: mid
            mcc: mcc
          cnt: cnt
          mnm: mnm
          mds: mds
          url: https://openapi-generator.tech
      properties:
        sid:
          description: Session Id with MPI
          nullable: true
          type: string
        mrc:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDMerchant'
        amt:
          $ref: '#/components/schemas/PayTools_Shared.Models.MoneyModel'
      type: object
    PayTools_Bl.Authentication.ThreeDsSessionModel:
      description: Data to be used in 3DS authentication request
      properties:
        merchantAccountName:
          description: The name of the stored merchant account
          minLength: 1
          type: string
        amt:
          $ref: '#/components/schemas/PayTools_Shared.Models.MoneyModel'
      required:
      - amt
      - merchantAccountName
      type: object
    PayTools_Bl.Authentication.TokenizationAction:
      description: Tokenization Action
      enum:
      - Always
      - IfChargeSuccessful
      - Never
      type: string
    PayTools_Dal.Entities.ThreeDsBrand:
      example:
        merchantId: merchantId
        bin: bin
        mcc: mcc
        brand: null
      properties:
        brand:
          $ref: '#/components/schemas/Payments.CardTypes'
        bin:
          minLength: 1
          type: string
        merchantId:
          minLength: 1
          type: string
        mcc:
          minLength: 1
          type: string
      required:
      - bin
      - mcc
      - merchantId
      type: object
    PayTools_Dal.Entities.ThreeDsMerchant:
      example:
        merchantDisplayName: merchantDisplayName
        merchantRequestorIdSuffix: merchantRequestorIdSuffix
        brands:
        - merchantId: merchantId
          bin: bin
          mcc: mcc
          brand: null
        - merchantId: merchantId
          bin: bin
          mcc: mcc
          brand: null
        merchantCountry: merchantCountry
        merchantUrl: https://openapi-generator.tech
        acquirerName: acquirerName
        merchantName: merchantName
      properties:
        merchantName:
          minLength: 1
          type: string
        merchantDisplayName:
          minLength: 1
          type: string
        merchantRequestorIdSuffix:
          minLength: 1
          type: string
        merchantCountry:
          minLength: 1
          type: string
        merchantUrl:
          format: uri
          minLength: 1
          type: string
        acquirerName:
          minLength: 1
          type: string
        brands:
          items:
            $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsBrand'
          nullable: true
          type: array
      required:
      - acquirerName
      - merchantCountry
      - merchantDisplayName
      - merchantName
      - merchantRequestorIdSuffix
      - merchantUrl
      type: object
      x-konfig-is-used-in-successful-response: true
    PayTools_Shared.Enums.Perform3ds:
      description: "Options for performing #DS"
      enum:
      - Mandatory
      - Skip
      - Optional
      type: string
    PayTools_Shared.Models.Card.StoredCard:
      description: Base model for card with Card holder name and Card Type
      example:
        expirationYear: 2025
        cardHolderName: cardHolderName
        cardType: null
        expirationMonth: 7
        cardToken: cardToken
      properties:
        cardToken:
          description: "a Reference to a Tokenized string. A Token should be referenced\
            \ in the format @TOKEN, e.g \"@nQGywsQE9gbURtrXEjTZwtWqeMdK9nsO\""
          minLength: 1
          pattern: "^@[A-Za-z0-9]{32}$"
          type: string
        expirationYear:
          description: Expiration year
          format: int32
          maximum: 2050
          minimum: 2023
          type: integer
        expirationMonth:
          description: Expiration year
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        cardType:
          $ref: '#/components/schemas/Payments.CardTypes'
        cardHolderName:
          description: Cardholder name (as apears on card)
          maxLength: 30
          minLength: 3
          type: string
      required:
      - cardHolderName
      - cardToken
      - expirationMonth
      - expirationYear
      type: object
    PayTools_Shared.Models.MessageType:
      description: Client message type enumeration
      enum:
      - NeverUsed
      - Authenticated
      - Rejected
      - FingerPrintRequired
      - FingerPrintCompleted
      - ChallengeRequired
      - TechnicalProblem
      - CardNotEnrolled
      - NoResponse
      type: string
    PayTools_Shared.Models.MoneyModel:
      description: Represents an amount in a given currency
      example:
        cur: null
        amt: 5.637376656633329
      properties:
        cur:
          $ref: '#/components/schemas/Payments.CurrencyCode'
        amt:
          description: Amount
          format: double
          type: number
      required:
      - amt
      - cur
      type: object
    PayTools_Shared.Models.ThreeDsClientMessage:
      description: base class for message to client (Http response or over WebSocket)
      example:
        messageType: null
      properties:
        messageType:
          $ref: '#/components/schemas/PayTools_Shared.Models.MessageType'
      type: object
      x-konfig-is-used-in-successful-response: true
    Payments.BankCard:
      example:
        expirationYear: 6
        number: number
        nameOnCard: nameOnCard
        issueNumber: issueNumber
        securityCode: securityCode
        expirationMonth: 0
        type: null
        ownerId: ownerId
      properties:
        type:
          $ref: '#/components/schemas/Payments.CardTypes'
        nameOnCard:
          nullable: true
          type: string
        issueNumber:
          maxLength: 2
          nullable: true
          type: string
        ownerId:
          nullable: true
          type: string
        securityCode:
          nullable: true
          type: string
        number:
          nullable: true
          type: string
        expirationMonth:
          format: int32
          type: integer
        expirationYear:
          format: int32
          type: integer
      type: object
    Payments.BankCardBase:
      example:
        expirationYear: 6
        number: number
        expirationMonth: 0
      properties:
        number:
          nullable: true
          type: string
        expirationMonth:
          format: int32
          type: integer
        expirationYear:
          format: int32
          type: integer
      type: object
    Payments.CardTypes:
      enum:
      - Visa
      - AMEX
      - BC
      - MasterCard
      - MC_Alaska
      - MC_Canada
      - CarteBlanche
      - UnionPay
      - Discover
      - DinersClub
      - CartaSi
      - CarteBleue
      - Dankort
      - Delta
      - Electron
      - JCB
      - Maestro
      - Switch
      - Solo
      - Lazer
      - Elo
      - Hipercard
      - enRoute
      - UATP
      type: string
    Payments.ChargeRequest:
      example:
        userToken: userToken
        amount:
          amount: 1.4658129805029452
          iso4217CurrencyNumber: iso4217CurrencyNumber
          currencyCode: null
          formattedAmount: formattedAmount
          amountInLargestUnits: 5.962133916683182
        isDigitalGoods: true
        generateToken: true
        bankCard:
          expirationYear: 6
          number: number
          nameOnCard: nameOnCard
          issueNumber: issueNumber
          securityCode: securityCode
          expirationMonth: 0
          type: null
          ownerId: ownerId
        myReference: myReference
        payer:
          lastName: lastName
          address: address
          address3: address3
          address2: address2
          city: city
          address1: address1
          stateProvince: stateProvince
          fullName: fullName
          cardOwnerId: cardOwnerId
          firstName: firstName
          phone: phone
          countryCode: countryCode
          validIpAddress: validIpAddress
          postCode: postCode
          email: email
          clientIPAddress: clientIPAddress
        threeDS:
          xid: xid
          eci: eci
          version: version
          authenticationValue: authenticationValue
        orderDesc: orderDesc
      properties:
        bankCard:
          $ref: '#/components/schemas/Payments.BankCard'
        payer:
          $ref: '#/components/schemas/Payments.Payer'
        threeDS:
          $ref: '#/components/schemas/Payments.ThreeDS'
        userToken:
          nullable: true
          type: string
        amount:
          $ref: '#/components/schemas/Payments.Money'
        myReference:
          nullable: true
          type: string
        isDigitalGoods:
          type: boolean
        orderDesc:
          nullable: true
          type: string
        generateToken:
          type: boolean
      type: object
    Payments.CurrencyCode:
      enum:
      - AFN
      - EUR
      - ALL
      - DZD
      - USD
      - AOA
      - XCD
      - ARS
      - AMD
      - AWG
      - AUD
      - AZN
      - BSD
      - BHD
      - BDT
      - BBD
      - BYR
      - BZD
      - XOF
      - BMD
      - BTN
      - INR
      - BOB
      - BOV
      - BAM
      - BWP
      - NOK
      - BRL
      - BND
      - BGN
      - BIF
      - KHR
      - XAF
      - CAD
      - CVE
      - KYD
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - KMF
      - CDF
      - NZD
      - CRC
      - HRK
      - CUC
      - CUP
      - ANG
      - CZK
      - DKK
      - DJF
      - DOP
      - EGP
      - SVC
      - ERN
      - ETB
      - FKP
      - FJD
      - XPF
      - GMD
      - GEL
      - GHS
      - GIP
      - GTQ
      - GBP
      - GNF
      - GYD
      - HTG
      - HNL
      - HKD
      - HUF
      - ISK
      - IDR
      - XDR
      - IRR
      - IQD
      - ILS
      - JMD
      - JPY
      - JOD
      - KZT
      - KES
      - KPW
      - KRW
      - KWD
      - KGS
      - LAK
      - LBP
      - LSL
      - ZAR
      - LRD
      - LYD
      - CHF
      - LTL
      - MOP
      - MKD
      - MGA
      - MWK
      - MYR
      - MVR
      - MRO
      - MUR
      - XUA
      - MXN
      - MXV
      - MDL
      - MNT
      - MAD
      - MZN
      - MMK
      - NAD
      - NPR
      - NIO
      - NGN
      - OMR
      - PKR
      - PAB
      - PGK
      - PYG
      - PEN
      - PHP
      - PLN
      - QAR
      - RON
      - RUB
      - RWF
      - SHP
      - WST
      - STD
      - SAR
      - RSD
      - SCR
      - SLL
      - SGD
      - XSU
      - SBD
      - SOS
      - SSP
      - LKR
      - SDG
      - SRD
      - SZL
      - SEK
      - CHE
      - CHW
      - SYP
      - TWD
      - TJS
      - TZS
      - THB
      - TOP
      - TTD
      - TND
      - TRY
      - TMT
      - UGX
      - UAH
      - AED
      - USN
      - UYI
      - UYU
      - UZS
      - VUV
      - VEF
      - VND
      - YER
      - ZMW
      - ZWL
      - XBA
      - XBB
      - XBC
      - XBD
      - XTS
      - XXX
      - XAU
      - XPD
      - XPT
      - XAG
      type: string
    Payments.Money:
      example:
        amount: 1.4658129805029452
        iso4217CurrencyNumber: iso4217CurrencyNumber
        currencyCode: null
        formattedAmount: formattedAmount
        amountInLargestUnits: 5.962133916683182
      properties:
        amount:
          format: double
          type: number
        currencyCode:
          $ref: '#/components/schemas/Payments.CurrencyCode'
        iso4217CurrencyNumber:
          nullable: true
          readOnly: true
          type: string
        amountInLargestUnits:
          format: double
          readOnly: true
          type: number
        formattedAmount:
          nullable: true
          readOnly: true
          type: string
      type: object
    Payments.NetworkTokenSchemes:
      enum:
      - Visa
      - MasterCard
      - Amex
      type: string
    Payments.Operation:
      enum:
      - Charge
      - PreAuth
      - Capture
      - Void
      - Refund
      - Tokenize
      type: string
    Payments.OperationResult:
      example:
        gatewayResultCode: gatewayResultCode
        amount: 0.8008281904610115
        gatewayReference: gatewayReference
        authorizationCode: authorizationCode
        gatewayName: gatewayName
        gatewayResultSubCode: gatewayResultSubCode
        gatewayResultSubDescription: gatewayResultSubDescription
        gatewayToken: ""
        gatewayResultDescription: gatewayResultDescription
        operationType: null
        currency: null
        operationResultDescription: operationResultDescription
        operationResultCode: null
        customGatewayResponse: ""
      properties:
        authorizationCode:
          nullable: true
          type: string
        operationType:
          $ref: '#/components/schemas/Payments.Operation'
        currency:
          $ref: '#/components/schemas/Payments.CurrencyCode'
        amount:
          format: double
          type: number
        operationResultCode:
          $ref: '#/components/schemas/Payments.Result'
        operationResultDescription:
          nullable: true
          type: string
        customGatewayResponse:
          nullable: true
        gatewayName:
          nullable: true
          type: string
        gatewayReference:
          nullable: true
          type: string
        gatewayResultCode:
          nullable: true
          type: string
        gatewayResultDescription:
          nullable: true
          type: string
        gatewayResultSubCode:
          nullable: true
          type: string
        gatewayResultSubDescription:
          nullable: true
          type: string
        gatewayToken:
          nullable: true
      type: object
      x-konfig-is-used-in-successful-response: true
    Payments.Payer:
      example:
        lastName: lastName
        address: address
        address3: address3
        address2: address2
        city: city
        address1: address1
        stateProvince: stateProvince
        fullName: fullName
        cardOwnerId: cardOwnerId
        firstName: firstName
        phone: phone
        countryCode: countryCode
        validIpAddress: validIpAddress
        postCode: postCode
        email: email
        clientIPAddress: clientIPAddress
      properties:
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        phone:
          format: tel
          nullable: true
          type: string
        cardOwnerId:
          nullable: true
          type: string
        address1:
          nullable: true
          type: string
        address2:
          nullable: true
          type: string
        address3:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        stateProvince:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        postCode:
          nullable: true
          type: string
        clientIPAddress:
          nullable: true
          type: string
        address:
          nullable: true
          readOnly: true
          type: string
        fullName:
          nullable: true
          readOnly: true
          type: string
        validIpAddress:
          nullable: true
          readOnly: true
          type: string
      type: object
    Payments.Result:
      enum:
      - Success
      - Accepted
      - Rejected
      - TemporaryFailure
      - FatalFailure
      - NotImplemented
      type: string
    Payments.ThreeDS:
      example:
        xid: xid
        eci: eci
        version: version
        authenticationValue: authenticationValue
      properties:
        version:
          nullable: true
          type: string
        authenticationValue:
          nullable: true
          type: string
        eci:
          nullable: true
          type: string
        xid:
          nullable: true
          type: string
      type: object
    ? System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e
    : example:
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    pciBooking.IINLookup.Library.CardValidationRequest:
      example:
        city: city
        countryCode: countryCode
        stateProvince: stateProvince
        iin: iin
        clientIPAddress: clientIPAddress
      properties:
        iin:
          nullable: true
          pattern: "^\\d{6,11}$"
          type: string
        city:
          nullable: true
          type: string
        stateProvince:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        clientIPAddress:
          nullable: true
          type: string
      type: object
    pciBooking.IINLookup.Library.CardValidationResult:
      example:
        issuerCountry: issuerCountry
        countryByIP: countryByIP
        riskLevel: null
        issuerName: issuerName
        cardType: cardType
        anonymousProxyUsed: true
        description: description
        cardCategory: cardCategory
        countryFromBillingAddress: countryFromBillingAddress
        cardBrand: cardBrand
      properties:
        description:
          nullable: true
          type: string
        riskLevel:
          $ref: '#/components/schemas/pciBooking.IINLookup.Library.RiskLevel'
        cardBrand:
          nullable: true
          type: string
        cardType:
          nullable: true
          type: string
        cardCategory:
          nullable: true
          type: string
        issuerName:
          nullable: true
          type: string
        issuerCountry:
          nullable: true
          type: string
        countryByIP:
          nullable: true
          type: string
        countryFromBillingAddress:
          nullable: true
          type: string
        anonymousProxyUsed:
          type: boolean
      type: object
    pciBooking.IINLookup.Library.RiskLevel:
      enum:
      - VeryHigh
      - High
      - Low
      - VeryLow
      type: string
    CustomFormsUploadFormFolderRequest:
      properties:
        ContentType:
          type: string
        ContentDisposition:
          type: string
        Headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        Length:
          format: int64
          type: integer
        Name:
          type: string
        FileName:
          type: string
      type: object
    CustomFormsUploadFormFolderRequest1:
      example:
        ContentType: ContentType
        ContentDisposition: ContentDisposition
        Length: 0
        Headers:
          key:
          - Headers
          - Headers
        FileName: FileName
        Name: Name
      properties:
        ContentType:
          type: string
        ContentDisposition:
          type: string
        Headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        Length:
          format: int64
          type: integer
        Name:
          type: string
        FileName:
          type: string
      type: object
    CustomFormsRemoveFormResponse:
      type: string
      x-konfig-is-used-in-non-successful-response: true
      x-do-not-generate: true
    ThreeDsMerchantsListMerchantsResponse:
      items:
        $ref: '#/components/schemas/PayTools_Api.Models.ThreeDsMerchantOutputModel'
      type: array
      x-konfig-is-used-in-successful-response: true
    NetworkTokenDeleteResponse:
      type: boolean
      x-konfig-is-used-in-successful-response: true
    PaymentGatewayAccountsGetAllResponse:
      items:
        $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccountBriefOutputModel'
      type: array
      x-konfig-is-used-in-successful-response: true
    PaymentGatewayListGatewaysResponse:
      items:
        $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayDescriptionModel'
      type: array
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-paths--Tools-luhn-get-parameters-1-schema:
      example: false
      type: boolean
      x-do-not-generate: true
    konfig-generated-schema-single-parameter-schema-get--CustomForms:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--CustomForms-name:
      properties:
        name:
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-put--CustomForms-name:
      properties:
        name:
          type: string
        ContentType:
          type: string
        ContentDisposition:
          type: string
        Headers:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        Length:
          format: int64
          type: integer
        Name:
          type: string
        FileName:
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-get--ThreeDsMerchants:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--ThreeDsMerchants-name:
      properties:
        name:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-get--ThreeDsMerchants-name:
      properties:
        name:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-put--ThreeDsMerchants-name:
      properties:
        name:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
        merchantName:
          minLength: 1
          type: string
        merchantDisplayName:
          minLength: 1
          type: string
        merchantRequestorIdSuffix:
          minLength: 1
          type: string
        merchantCountry:
          minLength: 1
          type: string
        merchantUrl:
          format: uri
          minLength: 1
          type: string
        acquirerName:
          minLength: 1
          type: string
        brands:
          items:
            $ref: '#/components/schemas/PayTools_Dal.Entities.ThreeDsBrand'
          nullable: true
          type: array
      required:
      - acquirerName
      - merchantCountry
      - merchantDisplayName
      - merchantName
      - merchantRequestorIdSuffix
      - merchantUrl
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-post--CardOperations:
      properties:
        ttl:
          format: int32
          maximum: 3600
          minimum: 60
          type: integer
        threeDsSessionModel:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ThreeDsSessionModel'
        vld:
          $ref: '#/components/schemas/pciBooking.IINLookup.Library.RiskLevel'
        "3ds":
          $ref: '#/components/schemas/PayTools_Shared.Enums.Perform3ds'
        crg:
          description: Is Card charge required for this session
          type: boolean
        tkn:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.TokenizationAction'
        crg_d:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
      required:
      - ttl
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ttl
    konfig-generated-schema-single-parameter-schema-post--CardOperations-validate:
      properties:
        iin:
          pattern: "\\d{6,11}"
          type: string
        city:
          description: City
          nullable: true
          type: string
        stateProvince:
          description: State or Province
          nullable: true
          type: string
        countryCode:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>)
          minLength: 1
          pattern: "[A-Z]{2}"
          type: string
      required:
      - countryCode
      - iin
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - iin
    konfig-generated-schema-single-parameter-schema-post--CardOperations-charge:
      properties:
        payerDetails:
          $ref: '#/components/schemas/PayTools_Api.Models.PayerDetailsNoIpAddress'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
      required:
      - card
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--CardOperations-store:
      properties:
        payload:
          description: The content of the string you would like to tokenize
          maxLength: 16384
          minLength: 1
          type: string
      required:
      - payload
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--CardOperations-opValidate:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--CardOperations-topBrands:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--CardOperations-brand:
      properties:
        iin:
          pattern: "\\d{6,11}"
          type: string
      required:
      - iin
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - iin
    konfig-generated-schema-single-parameter-schema-post--CvvOperations:
      properties:
        ttl:
          format: int32
          maximum: 3600
          minimum: 60
          type: integer
        card:
          $ref: '#/components/schemas/PayTools_Shared.Models.Card.StoredCard'
        crg_d:
          $ref: '#/components/schemas/PayTools_Bl.Authentication.ChargePresetData'
      required:
      - ttl
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ttl
    konfig-generated-schema-single-parameter-schema-post--CvvOperations-charge:
      properties:
        cvv:
          description: The card details that should be charged. You can either provide
            us with the raw card details or provide a reference to the stored card
            details in a token.
          minLength: 1
          pattern: "^\\d{3,4}$"
          type: string
      required:
      - cvv
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--CvvOperations-opValidate:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--NetworkToken:
      properties:
        source:
          $ref: '#/components/schemas/NetworkToken.RequestSource'
        brand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
        tokenId:
          description: Token Id within the Brand
          maxLength: 255
          minLength: 1
          type: string
        reason:
          description: Reason for deletion
          maxLength: 255
          nullable: true
          type: string
      required:
      - source
      - tokenId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--NetworkToken:
      properties:
        tokenizationRequest:
          $ref: '#/components/schemas/PayTools_Api.Models.TokenizationRequest'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardBaseWithSecurityCode'
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--PaymentGatewayAccounts-name:
      properties:
        name:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-get--PaymentGatewayAccounts-name:
      properties:
        name:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-put--PaymentGatewayAccounts-name:
      properties:
        name:
          pattern: "^[A-Za-z0-9]{3,64}$"
          type: string
        paymentGatewayName:
          description: Unique name of the Payment Gateway the account information
            relates to.
          nullable: true
          type: string
        credentials:
          description: "A list of key-value pairs that represents your credentials\
            \ within the Payment gateway. \r\nEach key should represent a parameter\
            \ listed in the \"CredentialsNames\" element of the response from the\
            \ list all payment gateways method at `[GET] /paymentGateway`\r\nExample:\r\
            \n\"Credentials\": [\r\n   {\r\n       \"Key\": \"PrivateKey\",\r\n  \
            \     \"Value\": \"VBtt666M/G098098vgdewvk0Mc-GH\"\r\n   }\r\n]"
          items:
            $ref: '#/components/schemas/System.Collections.Generic.KeyValuePair2System.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798eSystem.StringSystem.Private.CoreLibVersion6.0.0.0CultureneutralPublicKeyToken7cec85d7bea7798e'
          nullable: true
          type: array
      required:
      - name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - name
    konfig-generated-schema-single-parameter-schema-get--PaymentGatewayAccounts:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--PaymentGateway:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--PaymentGateway-charge:
      properties:
        currency:
          description: The currency of the transaction. Based on the <a href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
            target="_blank">ISO 4217</a> standard.
          minLength: 1
          type: string
        isDigital:
          description: This field is an additional optional parameter used by some
            of our payment processors. Please read our additional guidance section
            for payment processors that use this and other parameters
          type: boolean
        orderDesc:
          description: This field is an additional optional parameter used by some
            of our payment processors. Please read our additional guidance section
            for payment processors that use this and other parameters
          nullable: true
          type: string
        payerDetails:
          $ref: '#/components/schemas/PayTools_Api.Models.PayerDetails'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        amount:
          description: "The amount to be charged (the amount should be in major units\
            \ - for example, 10.23)"
          format: double
          type: number
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
        paymentGatewayAccountName:
          description: "The reference name provided to the stored Payment Gateway\
            \ Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please\
            \ note**, if you provide us with both this parameter and the raw credentials\
            \ in the `paymentGatewayAccount` object, this parameter will be ignored\
            \ and the raw credentials will take precedence."
          nullable: true
          type: string
        certificateName:
          description: Optional parameter if the payment gateway requires authentication
            using a client certificate. The name of the certificate that was stored
            in our system via our <a href="https://portal.epaytools.com" target="_blank">users
            portal</a>
          maxLength: 128
          nullable: true
          type: string
        paymentGatewayAccount:
          $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
        networkTokenBrand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
      required:
      - amount
      - card
      - currency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--PaymentGateway-authorize:
      properties:
        currency:
          description: The currency of the transaction. Based on the <a href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
            target="_blank">ISO 4217</a> standard.
          minLength: 1
          type: string
        isDigital:
          description: This field is an additional optional parameter used by some
            of our payment processors. Please read our additional guidance section
            for payment processors that use this and other parameters
          type: boolean
        orderDesc:
          description: This field is an additional optional parameter used by some
            of our payment processors. Please read our additional guidance section
            for payment processors that use this and other parameters
          nullable: true
          type: string
        payerDetails:
          $ref: '#/components/schemas/PayTools_Api.Models.PayerDetails'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        amount:
          description: "The amount to be charged (the amount should be in major units\
            \ - for example, 10.23)"
          format: double
          type: number
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
        paymentGatewayAccountName:
          description: "The reference name provided to the stored Payment Gateway\
            \ Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please\
            \ note**, if you provide us with both this parameter and the raw credentials\
            \ in the `paymentGatewayAccount` object, this parameter will be ignored\
            \ and the raw credentials will take precedence."
          nullable: true
          type: string
        certificateName:
          description: Optional parameter if the payment gateway requires authentication
            using a client certificate. The name of the certificate that was stored
            in our system via our <a href="https://portal.epaytools.com" target="_blank">users
            portal</a>
          maxLength: 128
          nullable: true
          type: string
        paymentGatewayAccount:
          $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
        networkTokenBrand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
      required:
      - amount
      - card
      - currency
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--PaymentGateway-capture:
      properties:
        currency:
          description: The currency of the transaction. Based on the <a href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
            target="_blank">ISO 4217</a> standard.
          minLength: 1
          type: string
        refTransId:
          description: The transaction ID that this operation is referring to.
          minLength: 1
          type: string
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        amount:
          description: "The amount to be charged (the amount should be in major units\
            \ - for example, 10.23)"
          format: double
          type: number
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
        paymentGatewayAccountName:
          description: "The reference name provided to the stored Payment Gateway\
            \ Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please\
            \ note**, if you provide us with both this parameter and the raw credentials\
            \ in the `paymentGatewayAccount` object, this parameter will be ignored\
            \ and the raw credentials will take precedence."
          nullable: true
          type: string
        certificateName:
          description: Optional parameter if the payment gateway requires authentication
            using a client certificate. The name of the certificate that was stored
            in our system via our <a href="https://portal.epaytools.com" target="_blank">users
            portal</a>
          maxLength: 128
          nullable: true
          type: string
        paymentGatewayAccount:
          $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
        networkTokenBrand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
      required:
      - amount
      - card
      - currency
      - refTransId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-put--PaymentGateway-refund:
      properties:
        currency:
          description: The currency of the transaction. Based on the <a href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
            target="_blank">ISO 4217</a> standard.
          minLength: 1
          type: string
        refTransId:
          description: The transaction ID that this operation is referring to.
          minLength: 1
          type: string
        payerDetails:
          $ref: '#/components/schemas/PayTools_Api.Models.PayerDetails'
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        amount:
          description: "The amount to be charged (the amount should be in major units\
            \ - for example, 10.23)"
          format: double
          type: number
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
        paymentGatewayAccountName:
          description: "The reference name provided to the stored Payment Gateway\
            \ Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please\
            \ note**, if you provide us with both this parameter and the raw credentials\
            \ in the `paymentGatewayAccount` object, this parameter will be ignored\
            \ and the raw credentials will take precedence."
          nullable: true
          type: string
        certificateName:
          description: Optional parameter if the payment gateway requires authentication
            using a client certificate. The name of the certificate that was stored
            in our system via our <a href="https://portal.epaytools.com" target="_blank">users
            portal</a>
          maxLength: 128
          nullable: true
          type: string
        paymentGatewayAccount:
          $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
        networkTokenBrand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
      required:
      - amount
      - card
      - currency
      - refTransId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-delete--PaymentGateway-void:
      properties:
        currency:
          description: The currency of the transaction. Based on the <a href="https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
            target="_blank">ISO 4217</a> standard.
          minLength: 1
          type: string
        refTransId:
          description: The transaction ID that this operation is referring to.
          minLength: 1
          type: string
        card:
          $ref: '#/components/schemas/PayTools_Api.Models.CardInputModel'
        amount:
          description: "The amount to be charged (the amount should be in major units\
            \ - for example, 10.23)"
          format: double
          type: number
        myRef:
          description: Your custom reference for this transaction
          nullable: true
          type: string
        paymentGatewayAccountName:
          description: "The reference name provided to the stored Payment Gateway\
            \ Account as set in `PUT /PaymentGatewayAccounts/{name}`.\r\n**Please\
            \ note**, if you provide us with both this parameter and the raw credentials\
            \ in the `paymentGatewayAccount` object, this parameter will be ignored\
            \ and the raw credentials will take precedence."
          nullable: true
          type: string
        certificateName:
          description: Optional parameter if the payment gateway requires authentication
            using a client certificate. The name of the certificate that was stored
            in our system via our <a href="https://portal.epaytools.com" target="_blank">users
            portal</a>
          maxLength: 128
          nullable: true
          type: string
        paymentGatewayAccount:
          $ref: '#/components/schemas/PayTools_Api.Models.PaymentGatewayAccount'
        networkTokenBrand:
          $ref: '#/components/schemas/Payments.NetworkTokenSchemes'
      required:
      - amount
      - card
      - currency
      - refTransId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-post--ThreeDsSessions:
      properties:
        ttl:
          format: int32
          maximum: 3600
          minimum: 60
          type: integer
        merchantAccountName:
          description: The name of the stored merchant account
          minLength: 1
          type: string
        amt:
          $ref: '#/components/schemas/PayTools_Shared.Models.MoneyModel'
      required:
      - amt
      - merchantAccountName
      - ttl
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - ttl
    konfig-generated-schema-single-parameter-schema-get--ThreeDsSessions-opValidate:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--ThreeDsSessions-challengeStatus:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--ThreeDsSessions-mpiChallengeCallback-sessionId:
      properties:
        sessionId:
          type: string
      required:
      - sessionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sessionId
    konfig-generated-schema-single-parameter-schema-post--ThreeDsSessions-fingerprintCallback-sessionId:
      properties:
        sessionId:
          pattern: "[A-Za-z0-9]{32}"
          type: string
      required:
      - sessionId
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - sessionId
    konfig-generated-schema-single-parameter-schema-get--Utils-apiKey:
      properties: {}
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--Tools-brand:
      properties:
        iin:
          pattern: "\\d{6,11}"
          type: string
      required:
      - iin
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - iin
    konfig-generated-schema-single-parameter-schema-post--StringTokens:
      properties:
        payload:
          description: The content of the string you would like to tokenize
          maxLength: 16384
          minLength: 1
          type: string
      required:
      - payload
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter: []
    konfig-generated-schema-single-parameter-schema-get--Tools-iin:
      properties:
        iin:
          pattern: "\\d{6,11}"
          type: string
      required:
      - iin
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - iin
    konfig-generated-schema-single-parameter-schema-delete--StringTokens-token:
      properties:
        token:
          pattern: "[A-Za-z0-9]{32}"
          type: string
      required:
      - token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - token
    konfig-generated-schema-single-parameter-schema-get--StringTokens-token:
      properties:
        token:
          pattern: "[A-Za-z0-9]{32}"
          type: string
      required:
      - token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - token
    konfig-generated-schema-single-parameter-schema-get--StringTokens-token-meta:
      properties:
        token:
          pattern: "[A-Za-z0-9]{32}"
          type: string
      required:
      - token
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - token
    konfig-generated-schema-single-parameter-schema-post--Tools-validate:
      properties:
        iin:
          pattern: "\\d{6,11}"
          type: string
        clientIPAddress:
          description: Client IP address
          minLength: 1
          type: string
        city:
          description: City
          nullable: true
          type: string
        stateProvince:
          description: State or Province
          nullable: true
          type: string
        countryCode:
          description: 2 letter country code (<a href="https://en.wikipedia.org/wiki/ISO_3166-2#Current_codes"
            target="_blank">ISO 3166-2 <img src="https://files.readme.io/b676144-openNewWindow.png"
            width="10" /></a>)
          minLength: 1
          pattern: "[A-Z]{2}"
          type: string
      required:
      - clientIPAddress
      - countryCode
      - iin
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - iin
    konfig-generated-schema-single-parameter-schema-get--Tools-luhn:
      properties:
        number:
          type: string
        metaData:
          default: false
          example: false
          type: boolean
          x-konfig-original-example: false
          x-konfig-generated-schema: konfig-generated-schema-paths--Tools-luhn-get-parameters-1-schema
      required:
      - number
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - number
      - metaData
  securitySchemes:
    ApiKeyAuth:
      description: Please enter ApiKey into field
      in: header
      name: X-Api-Key
      type: apiKey
      x-konfig-globally-required-security: false
    JwsAuth:
      bearerFormat: Jwt
      description: Please enter JWS token into field
      scheme: bearer
      type: http
      x-konfig-globally-required-security: false
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true

